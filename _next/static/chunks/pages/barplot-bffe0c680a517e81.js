(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[370],{19879:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/barplot",function(){return n(99292)}])},90505:function(e,t,n){"use strict";n.d(t,{r:function(){return d}});var a=n(85893),i=n(41664),s=n.n(i),r=n(28843),l=n(66717),o=n(3572);let d=e=>{let{chartId:t}=e,n=r.c.filter(e=>e.id===t)[0].label;return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h2",{id:"responsiveness",children:"Responsive "+n+" with react"}),(0,a.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,a.jsx)("code",{children:"width"})," and ",(0,a.jsx)("code",{children:"height"})," and will render a ",n," of those dimensions."]}),(0,a.jsxs)("p",{children:["Making the ",n," responsive requires adding a ",(0,a.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,a.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,a.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,a.jsx)(l.U,{title:(0,a.jsxs)("span",{children:[(0,a.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,a.jsx)(o.d,{code:h})}),(0,a.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,a.jsx)(s(),{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{})]})},h='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},66717:function(e,t,n){"use strict";n.d(t,{U:function(){return i}});var a=n(85893);let i=e=>{let{title:t,children:n}=e;return(0,a.jsxs)("details",{className:"bg-gray-50 py-2 px-4 rounded-md my-2",children:[(0,a.jsx)("summary",{className:"cursor-pointer",children:t}),(0,a.jsx)("div",{className:"pt-4",children:n})]})}},99292:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return b}});var a=n(85893);n(67294);var i=n(80153),s=n(43710),r=n(61651),l=n(3572),o=n(81122),d=n(41664),h=n.n(d),c=n(12885),p=n(90505),u=n(46228),x=n(52450),m=n(27986);let j=(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("p",{children:["A ",(0,a.jsx)("a",{href:"https://www.data-to-viz.com/graph/barplot.html",children:"barplot"})," ","displays a numeric value for several groups of a dataset using rectangles. This page is a step-by-step guide on how to build your own barplot for the web, using ",(0,a.jsx)("a",{href:"https://reactjs.org/",children:"React"})," and"," ",(0,a.jsx)("a",{href:"https://d3-graph-gallery.com/barplot.html",children:"D3.js"}),"."]}),(0,a.jsxs)("p",{children:["It starts with very basic concepts like ",(0,a.jsx)("b",{children:"data structure"}),","," ",(0,a.jsx)("b",{children:"scales"})," and svg rectangle ",(0,a.jsx)("b",{children:"rendering"}),". It then shows how to add interactivity to the chart with ",(0,a.jsx)("b",{children:"hover effects"}),". Last but not least it explains how to build variations like the ",(0,a.jsx)("b",{children:"stacked barplot"}),"."]})]});function b(){return(0,a.jsxs)(i.A,{title:"Barplot with React",seoDescription:"How to build a barplot with React and D3.js. A set of re-usable components",children:[(0,a.jsx)(s.Z,{title:"Barplot",description:j,chartType:"barplot"}),(0,a.jsx)("h2",{id:"data",children:"The Data"})," ",(0,a.jsxs)("p",{children:["The dataset required to build a barplot is usually an array where each item is an object providing the ",(0,a.jsx)("code",{children:"name"})," and the"," ",(0,a.jsx)("code",{children:"value"})," of the group."]}),(0,a.jsx)("br",{}),(0,a.jsx)("p",{children:"Here is a minimal example"}),(0,a.jsx)(l.d,{code:g}),(0,a.jsxs)("p",{children:["Note: if your data is in ",(0,a.jsx)("code",{children:".csv"})," format, you can translate it thanks to the ",(0,a.jsx)("code",{children:"d3.csv()"})," function as suggested"," ",(0,a.jsx)("a",{href:"https://d3-graph-gallery.com/graph/barplot_horizontal.html",children:"here"}),"."]}),(0,a.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,a.jsxs)("p",{children:["The goal here is to create a ",(0,a.jsx)("code",{children:"Barplot"})," component that will be stored in a ",(0,a.jsx)("code",{children:"Barplot.tsx"})," file. This component requires 3 props to render: a ",(0,a.jsx)("code",{children:"width"}),", a ",(0,a.jsx)("code",{children:"height"}),", and some"," ",(0,a.jsx)("code",{children:"data"}),"."]}),(0,a.jsxs)("p",{children:["The shape of the ",(0,a.jsx)("code",{children:"data"})," is described above. The"," ",(0,a.jsx)("code",{children:"width"})," and ",(0,a.jsx)("code",{children:"height"})," will be used to rendering a"," ",(0,a.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the barplot."]}),(0,a.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our ",(0,a.jsx)("code",{children:"Barplot"})," ","component:"]}),(0,a.jsx)(l.d,{code:f}),(0,a.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the svg ",(0,a.jsx)("code",{children:"circle"}),", but it's react that will render them in the ",(0,a.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,a.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,a.jsx)("a",{href:"https://d3-graph-gallery.com/barplot.html",children:"d3.js examples"}),"."]}),(0,a.jsx)("h2",{id:"Scales",children:"Scales"}),(0,a.jsxs)("p",{children:["A ",(0,a.jsx)("b",{children:"scale"})," is a function that transforms a ",(0,a.jsx)("b",{children:"dimension"})," (like our ",(0,a.jsx)("code",{children:"value"})," or our group ",(0,a.jsx)("code",{children:"name"}),") in a"," ",(0,a.jsx)("b",{children:"position"})," in pixels."]}),(0,a.jsxs)("p",{children:["Building a barplot requires 2 scales of 2 kinds. The first will transform the group ",(0,a.jsx)("code",{children:"value"})," in a bar length. The second will transform the group ",(0,a.jsx)("code",{children:"name"})," in a position."]}),(0,a.jsx)("h3",{children:"→ Linear scale for the bar length"}),(0,a.jsxs)("p",{children:["D3.js comes with a handful set of"," ",(0,a.jsx)("a",{href:"https://github.com/d3/d3-scale",children:"predefined scales"}),"."," ",(0,a.jsx)("code",{children:"scaleLinear"})," is what we need for the bar length. Here is a quick overview on how to build and use a linear scale:"]}),(0,a.jsx)(l.d,{code:v}),(0,a.jsxs)("p",{children:["Since we are building a ",(0,a.jsx)("b",{children:"horizontal"})," barplot here, this scale will be used by the ",(0,a.jsx)("b",{children:"X"})," axis."]}),(0,a.jsxs)("p",{children:["To dig more into d3 scales, visit this"," ",(0,a.jsx)("a",{href:"https://d3-graph-gallery.com/graph/custom_axis.html",children:"dedicated page"}),". It's a crucial concept that will be used everywhere in this website."]}),(0,a.jsx)("h3",{children:"→ Band scale for the group position"}),(0,a.jsxs)("p",{children:["A ",(0,a.jsx)("a",{href:"https://github.com/d3/d3-scale#scaleBand",children:"band scale"})," will be used to control the position of each rectangle on the Y axis. It is computed with the ",(0,a.jsx)("code",{children:"scaleBand()"})," function of d3.js. It attributes a band of pixels to each group."]}),(0,a.jsxs)("p",{children:["For instance, calling the band scale with ",(0,a.jsx)("code",{children:'yScale("A")'})," will return ",(0,a.jsx)("code",{children:"0"}),", and ",(0,a.jsx)("code",{children:"yScale.bandwidth()"})," will return the width of the band (e.g. ",(0,a.jsx)("code",{children:"11px"}),")."]}),(0,a.jsxs)("p",{children:["Note: the ",(0,a.jsx)("code",{children:"padding"})," argument controls the space between bars."]}),(0,a.jsx)(l.d,{code:w}),(0,a.jsx)("h2",{id:"basic barplot",children:"Basic barplot"}),(0,a.jsxs)("p",{children:["We now have all the ingredients to build a basic barplot with react, all being pretty close to the"," ",(0,a.jsx)("a",{href:"https://d3-graph-gallery.com/barplot",children:"d3-only examples"}),"."]}),(0,a.jsxs)("p",{children:["For each item in the dataset, create a SVG ",(0,a.jsx)("code",{children:"rect"})," element. Its vertical position can be retrieved from the group ",(0,a.jsx)("code",{children:"name"})," ","thanks to the band scale. It's size is retrieved using the"," ",(0,a.jsx)("code",{children:"xScale"})," and its ",(0,a.jsx)("code",{children:"value"}),"."]}),(0,a.jsx)("p",{children:"Note that using the same amount of information it is straightforward to add a label for the name and one for the value."}),(0,a.jsx)(o.$,{vizName:"BarplotBasic",VizComponent:c.R,height:500,maxWidth:500,caption:"Most basic barplot built with d3.js for scales, and react for rendering"}),(0,a.jsx)(p.r,{chartId:"barplot"}),(0,a.jsx)("h2",{id:"transition",children:"Transition"}),(0,a.jsxs)("p",{children:["When the dataset updates, it adds a nice touch to"," ",(0,a.jsx)("b",{children:"smoothly animate"})," the transition. In the example below, changing the dataset will update the ",(0,a.jsx)("b",{children:"bar sizes"})," and their ",(0,a.jsx)("b",{children:"positions"})," ","on the Y axis to keep the ranking accurate."]}),(0,a.jsxs)("p",{children:["Animation is a complicated topic in dataviz. We have to deal with"," ",(0,a.jsx)("b",{children:"updates"})," (an element changes its features), ",(0,a.jsx)("b",{children:"enter"})," (a new element appears) and ",(0,a.jsx)("b",{children:"exit"})," (an element is not present anymore) patterns."]}),(0,a.jsxs)("p",{children:["I suggest to rely on the ",(0,a.jsx)("code",{children:"react-spring"})," library to help here. Please check this"," ",(0,a.jsx)(h(),{href:"example/barplot-data-transition-animation",children:"dedicated blogpost"})," ","to get explanations about the code of this example."]}),(0,a.jsx)(o.$,{vizName:"BarplotDatasetTransition",VizComponent:u.P,height:400,maxWidth:600,caption:"Most basic barplot built with d3.js for scales, and react for rendering"}),(0,a.jsx)("h2",{id:"stacking",children:"Stacking"}),(0,a.jsxs)("p",{children:["A ",(0,a.jsx)("b",{children:"stacked barplot"})," is a variation of a barplot where an"," ",(0,a.jsx)("b",{children:"additional level of grouping"})," is represented. Each bar represent the value of a ",(0,a.jsx)("code",{children:"group"}),", for instance how much each my friend spent in the last month. Each bar is then subdivided, each part representing the value of a ",(0,a.jsx)("code",{children:"subgroup"}),", for instance the category of expense."]}),(0,a.jsxs)("p",{children:["D3 comes with a very handy ",(0,a.jsx)("code",{children:"stack()"})," function. The 2 tutorials below explain how this function works, and how to use it to render a clean stacked barplot."]}),(0,a.jsx)(x.Z,{images:["barplot-stacked-horizontal.png","barplot-stacked-vertical.png","barplot-stacked-alternative.png"]}),(0,a.jsx)("h2",{id:"vertical",children:"Vertical barplot"})," ",(0,a.jsxs)("p",{children:["The vertical option is less common since it makes is much"," ",(0,a.jsx)("b",{children:"harder to read the labels"}),". But if you really need it, it is just a matter of swaping the X and Y axes of the previous example."]}),(0,a.jsxs)("p",{children:["Here is a sandbox if you just need the code, but please read the"," ",(0,a.jsx)(h(),{href:"/example/barplot-vertical",children:"dedicated tutorial"})," for more explanations."]}),(0,a.jsx)(o.$,{vizName:"BarplotVertical",VizComponent:m.d,height:400,maxWidth:600,caption:"Basic vertical barplot made with React and D3.js"}),(0,a.jsx)("h2",{id:"hover effect",children:"Hover effect"})," ",(0,a.jsxs)("p",{children:["This example will be publish soon, please"," ",(0,a.jsx)(h(),{href:"subscribe",children:"subscribe"})," to the newsletter if you want to be notified."]}),(0,a.jsx)("h2",{id:"variations",children:"Variations"}),(0,a.jsx)("p",{children:"Let's go beyond the basic barcharts. Click on the overview images below to get details and code."}),(0,a.jsx)("br",{}),(0,a.jsx)(x.Z,{images:["donut-barplot-transition.gif","barplot-the-economist.png","barplot-vertical.png"]}),(0,a.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,a.jsx)(r.Z,{chartFamily:"ranking"}),(0,a.jsx)("div",{className:"mt-20"})]})}let g='\nconst data = [\n  {name:"Mark", value: 90},\n  {name:"Robert", value: 12},\n  {name:"Emily", value: 34},\n  {name:"Marion", value: 53},\n  {name:"Nicolas", value: 98},\n]\n'.trim(),f='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype BarplotProps = {\n  width: number;\n  height: number;\n  data: { name: string; y: number }[];\n};\n\nexport const Barplot = ({ width, height, data }: BarplotProps) => {\n\n  // read the data\n  // do some stuff with d3\n  // compute all the <rect>\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render all the <rect>\n      </svg>\n    </div>\n  );\n};\n'.trim(),v="\nconst scale = d3.scaleLinear()\n  .domain([0, 10]) // data goes from 0 to 10\n  .range([0, 200]); // axis goes from 0 to 200\n\nscale(0); // 0 -> item with a value of 0 will have a bar of length 0\nscale(5); // 100 -> bar of length 100\nscale(10); // 200 -> bar of length 200\n".trim(),w='\nconst yScale = d3\n    .scaleBand()\n    .range([0, boundsHeight])\n    .domain(allGroups)\n    .padding(0.01);\n\n// yScale("A") -> 0\n// yScale.bandwidth() -> 11\n'.trim()},12885:function(e,t,n){"use strict";n.d(t,{R:function(){return d}});var a=n(85893);let i=[{name:"Mark",value:90},{name:"Robert",value:12},{name:"Emily",value:34},{name:"Marion",value:53},{name:"Nicolas",value:98},{name:"M\xe9lanie",value:23},{name:"Gabriel",value:18},{name:"Jean",value:104},{name:"Paul",value:2}];var s=n(67294),r=n(52604);let l={top:30,right:30,bottom:30,left:30},o=e=>{let{width:t,height:n,data:i}=e,o=t-l.right-l.left,d=n-l.top-l.bottom,h=i.sort((e,t)=>t.value-e.value).map(e=>e.name),c=(0,s.useMemo)(()=>r.tiA().domain(h).range([0,d]).padding(.3),[i,n]),p=(0,s.useMemo)(()=>{let[e,t]=r.Wem(i.map(e=>e.value));return r.BYU().domain([0,t||10]).range([0,o])},[i,t]),u=i.map((e,t)=>{let n=c(e.name);return void 0===n?null:(0,a.jsxs)("g",{children:[(0,a.jsx)("rect",{x:p(0),y:c(e.name),width:p(e.value),height:c.bandwidth(),opacity:.7,stroke:"#9d174d",fill:"#9d174d",fillOpacity:.3,strokeWidth:1,rx:1}),(0,a.jsx)("text",{x:p(e.value)-7,y:n+c.bandwidth()/2,textAnchor:"end",alignmentBaseline:"central",fontSize:12,opacity:p(e.value)>90?1:0,children:e.value}),(0,a.jsx)("text",{x:p(0)+7,y:n+c.bandwidth()/2,textAnchor:"start",alignmentBaseline:"central",fontSize:12,children:e.name})]},t)}),x=p.ticks(5).slice(1).map((e,t)=>(0,a.jsxs)("g",{children:[(0,a.jsx)("line",{x1:p(e),x2:p(e),y1:0,y2:d,stroke:"#808080",opacity:.2}),(0,a.jsx)("text",{x:p(e),y:d+10,textAnchor:"middle",alignmentBaseline:"central",fontSize:9,stroke:"#808080",opacity:.8,children:e})]},t));return(0,a.jsx)("div",{children:(0,a.jsx)("svg",{width:t,height:n,children:(0,a.jsxs)("g",{width:o,height:d,transform:"translate(".concat([l.left,l.top].join(","),")"),children:[x,u]})})})},d=e=>{let{width:t=700,height:n=400}=e;return(0,a.jsx)(o,{data:i,width:t,height:n})}},46228:function(e,t,n){"use strict";n.d(t,{P:function(){return x}});var a=n(85893),i=n(67294);let s=[{name:"Mark",value:90},{name:"Robert",value:12},{name:"Emily",value:34},{name:"Marion",value:53},{name:"Nicolas",value:98},{name:"M\xe9lanie",value:23},{name:"Gabriel",value:18},{name:"Jean",value:104},{name:"Paul",value:2}],r=[{name:"Mark",value:9},{name:"Robert",value:19},{name:"Emily",value:31},{name:"Marion",value:23},{name:"Nicolas",value:38},{name:"M\xe9lanie",value:123},{name:"Gabriel",value:4},{name:"Jean",value:23},{name:"Christophe",value:22}];var l=n(52604),o=n(2719);let d=e=>{var t,n,i,s;let{name:r,value:l,barHeight:d,barWidth:h,x:c,y:p}=e,u=(0,o.q_)({from:{value:0,barWidth:0,valueOpacity:0},to:{value:l,barWidth:h,valueOpacity:h>80?1:0,y:p},config:{friction:100}});return(0,a.jsxs)("g",{children:[(0,a.jsx)(o.q.rect,{x:c,y:u.y,width:u.barWidth,height:d,opacity:.7,stroke:"#9d174d",fill:"#9d174d",fillOpacity:.3,strokeWidth:1,rx:1}),(0,a.jsx)(o.q.text,{x:null===(t=u.barWidth)||void 0===t?void 0:t.to(e=>e-7),y:null===(n=u.y)||void 0===n?void 0:n.to(e=>e+d/2),textAnchor:"end",alignmentBaseline:"central",fontSize:12,opacity:u.valueOpacity,children:null===(i=u.value)||void 0===i?void 0:i.to(e=>e.toFixed(0))}),(0,a.jsx)(o.q.text,{x:c+7,y:null===(s=u.y)||void 0===s?void 0:s.to(e=>e+d/2),textAnchor:"start",alignmentBaseline:"central",fontSize:12,children:r})]})},h={top:30,right:30,bottom:30,left:30},c=e=>{let{width:t,height:n,data:s}=e,r=t-h.right-h.left,o=n-h.top-h.bottom,c=s.sort((e,t)=>t.value-e.value).map(e=>e.name),p=(0,i.useMemo)(()=>l.tiA().domain(c).range([0,o]).padding(.3),[s,n]),u=l.Fp7(s.map(e=>e.value)),x=l.BYU().domain([0,u]).range([0,r]),m=s.map(e=>(0,a.jsx)(d,{name:e.name,value:e.value,barHeight:p.bandwidth(),barWidth:x(e.value),x:x(0),y:p(e.name)},e.name));return(0,a.jsx)("div",{children:(0,a.jsx)("svg",{width:t,height:n,children:(0,a.jsx)("g",{width:r,height:o,transform:"translate(".concat([h.left,h.top].join(","),")"),children:m})})})},p={border:"1px solid #9a6fb0",borderRadius:"3px",padding:"4px 8px",margin:"10px 2px",fontSize:14,color:"#9a6fb0",opacity:.7},u=e=>{let{width:t,height:n}=e,[l,o]=(0,i.useState)(s);return(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{style:{height:50},children:[(0,a.jsx)("button",{style:p,onClick:()=>o(s),children:"Data 1"}),(0,a.jsx)("button",{style:p,onClick:()=>o(r),children:"Data 2"})]}),(0,a.jsx)(c,{width:t,height:n-50,data:l})]})},x=e=>{let{width:t=700,height:n=400}=e;return t&&n?(0,a.jsx)(u,{width:t,height:n}):null}}},function(e){e.O(0,[2343,7754,2604,7823,2719,8190,3710,2594,693,8785,9774,2888,179],function(){return e(e.s=19879)}),_N_E=e.O()}]);