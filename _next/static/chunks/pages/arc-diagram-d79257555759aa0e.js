(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8078],{58930:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/arc-diagram",function(){return t(37626)}])},52450:function(e,n,t){"use strict";t.d(n,{Z:function(){return o}});var i=t(85893);t(67294);var r=t(92050),a=t(49975),s=t(59942);function o(e){let{images:n}=e,t=r.F.filter(e=>n.includes(e.img)).map((e,n)=>(0,i.jsx)(a.X,{link:e.link,title:e.title,description:(0,i.jsx)("p",{children:e.description}),img:e.img,alt:e.alt},n));return(0,i.jsx)(s.E,{children:t})}},90505:function(e,n,t){"use strict";t.d(n,{r:function(){return c}});var i=t(85893),r=t(41664),a=t.n(r),s=t(28843),o=t(66717),d=t(3572);let c=e=>{let{chartId:n}=e,t=s.c.filter(e=>e.id===n)[0].label;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{id:"responsiveness",children:"Responsive "+t+" with react"}),(0,i.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"})," and will render a ",t," of those dimensions."]}),(0,i.jsxs)("p",{children:["Making the ",t," responsive requires adding a ",(0,i.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,i.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,i.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,i.jsx)(o.U,{title:(0,i.jsxs)("span",{children:[(0,i.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,i.jsx)(d.d,{code:l})}),(0,i.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,i.jsx)(a(),{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]})},l='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},66717:function(e,n,t){"use strict";t.d(n,{U:function(){return r}});var i=t(85893);let r=e=>{let{title:n,children:t}=e;return(0,i.jsxs)("details",{className:"bg-gray-50 py-2 px-4 rounded-md my-2",children:[(0,i.jsx)("summary",{className:"cursor-pointer",children:n}),(0,i.jsx)("div",{className:"pt-4",children:t})]})}},18893:function(e,n,t){"use strict";t.d(n,{H:function(){return r}});var i=t(85893);let r=e=>{let{text:n}=e;return(0,i.jsxs)("blockquote",{className:"mt-10 opacity-20",children:[(0,i.jsx)("b",{className:"text-reactGallery mr-4",children:"ToDo"}),n]})}},37626:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return M}});var i=t(85893);t(67294);var r=t(80153),a=t(43710),s=t(61651),o=t(3572),d=t(81122),c=t(26820),l=t(90505),h=t(18893);let u={nodes:[{id:"Myriel",group:"team1"},{id:"Anne",group:"team1"},{id:"Gabriel",group:"team1"},{id:"Mel",group:"team1"},{id:"Yan",group:"team2"},{id:"Tom",group:"team2"},{id:"Cyril",group:"team2"},{id:"Tuck",group:"team2"},{id:"Antoine",group:"team3"},{id:"Rob",group:"team3"}],links:[{source:"Anne",target:"Myriel",value:1},{source:"Napoleon",target:"Myriel",value:1},{source:"Gabriel",target:"Myriel",value:1},{source:"Mel",target:"Myriel",value:1},{source:"Yan",target:"Tom",value:1},{source:"Tom",target:"Cyril",value:1},{source:"Tuck",target:"Myriel",value:1},{source:"Tuck",target:"Mel",value:1},{source:"Tuck",target:"Myriel",value:1},{source:"Mel",target:"Myriel",value:1},{source:"Rob",target:"Antoine",value:1}]};var p=t(52604);let g=["#e0ac2b","#e85252","#6689c6","#9a6fb0","#a53253"],m={top:10,right:30,bottom:50,left:30},x=e=>{let{width:n,height:t,data:r}=e,a=n-m.right-m.left,s=t-m.top-m.bottom,o=r.nodes.map(e=>e.id),d=[...new Set(r.nodes.map(e=>e.group))],c=p.q2y().range([0,a]).domain(o),l=p.PKp().domain(d).range(g),h=r.nodes.map(e=>(0,i.jsx)("circle",{cx:c(e.id),cy:s,r:8,fill:l(e.group)},e.id)),u=r.links.map((e,n)=>{let t=c(e.source),r=c(e.target);if(void 0!==t&&void 0!==r)return(0,i.jsx)("path",{d:j(t,s,r,s),stroke:"black",fill:"none"},n)});return(0,i.jsx)("div",{children:(0,i.jsx)("svg",{width:n,height:t,children:(0,i.jsxs)("g",{width:a,height:s,transform:"translate(".concat([m.left,m.top].join(","),")"),children:[h,u]})})})},j=(e,n,t,i)=>["M",e,n,"A",(e-t)/2,(e-t)/2,0,1,e<t?1:0,t,",",i].join(" "),f=e=>{let{width:n=700,height:t=400}=e;return 0===n?null:(0,i.jsx)(x,{data:u,width:n,height:t})},b={nodes:[{id:"Myriel",group:"team1"},{id:"Anne",group:"team1"},{id:"Gabriel",group:"team1"},{id:"Mel",group:"team1"},{id:"Yan",group:"team2"},{id:"Tom",group:"team2"},{id:"Cyril",group:"team2"},{id:"Tuck",group:"team2"},{id:"Antoine",group:"team3"},{id:"Rob",group:"team3"}],links:[{source:"Anne",target:"Myriel",value:1},{source:"Napoleon",target:"Myriel",value:1},{source:"Gabriel",target:"Myriel",value:1},{source:"Mel",target:"Myriel",value:1},{source:"Yan",target:"Tom",value:1},{source:"Tom",target:"Cyril",value:1},{source:"Tuck",target:"Myriel",value:1},{source:"Tuck",target:"Mel",value:1},{source:"Tuck",target:"Myriel",value:1},{source:"Mel",target:"Myriel",value:1},{source:"Rob",target:"Antoine",value:1}]},w=["#e0ac2b","#e85252","#6689c6","#9a6fb0","#a53253"],v={top:10,right:30,bottom:50,left:30},y=e=>{let{width:n,height:t,data:r}=e,a=n-v.right-v.left,s=t-v.top-v.bottom,o=r.nodes.map(e=>e.id),d=[...new Set(r.nodes.map(e=>e.group))],c=p.q2y().range([0,a]).domain(o),l=p.PKp().domain(d).range(w),h=r.nodes.map(e=>(0,i.jsx)("circle",{cx:c(e.id),cy:s,r:8,fill:l(e.group)},e.id));return(0,i.jsx)("div",{children:(0,i.jsx)("svg",{width:n,height:t,children:(0,i.jsx)("g",{width:a,height:s,transform:"translate(".concat([v.left,v.top].join(","),")"),children:h})})})},k=e=>{let{width:n=700,height:t=400}=e;return 0===n?null:(0,i.jsx)(y,{data:b,width:n,height:t})};var A=t(52450);let D=(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("p",{children:["An ",(0,i.jsx)("a",{href:"https://www.data-to-viz.com/graph/arc.html",children:"arc diagram"})," is a special kind of network graph. It is consituted by ",(0,i.jsx)("b",{children:"nodes"})," that represent entities and by ",(0,i.jsx)("b",{children:"links"})," that show relationships between entities. In arc diagrams, nodes are displayed along a ",(0,i.jsx)("b",{children:"single axis"})," ","and links are represented with ",(0,i.jsx)("b",{children:"arcs"}),"."]}),(0,i.jsxs)("p",{children:["This page is a step by step tutorial explaining how to build an Arc diagram component with ",(0,i.jsx)("code",{children:"React"})," and ",(0,i.jsx)("code",{children:"D3.js"}),". It comes with explanations and code sandboxes. It starts by simple concept like how to format the data and how to draw arcs in SVG, and then goes further with hover effect, tooltip and more."]})]});function M(){return(0,i.jsxs)(r.A,{title:"How to build an Arc Diagram with React and D3.",seoDescription:"A step-by-step guide to build your very own Arc diagram from scratch. Comes with explanations, code sandboxes, and ready-to-use templates.",children:[(0,i.jsx)(a.Z,{title:"Arc diagram",description:D,chartType:"arc"}),(0,i.jsx)("h2",{id:"data",children:"The Data"}),(0,i.jsxs)("p",{children:["Two layers of information are required to build an arc diagram: a list of ",(0,i.jsx)("b",{children:"nodes"})," to build the circles and a list of ",(0,i.jsx)("b",{children:"links"})," to build the arcs."]}),(0,i.jsx)("p",{children:"Many different data structures can be used to store such information. In this tutorial I suggest to start with the following:"}),(0,i.jsx)(o.d,{code:T}),(0,i.jsxs)("p",{children:[(0,i.jsx)("code",{children:"data"})," is an object with 2 properties: ",(0,i.jsx)("code",{children:"nodes"})," and"," ",(0,i.jsx)("code",{children:"links"}),"."]}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:"nodes"})," is an array where each node is an object defined by its ",(0,i.jsx)("code",{children:"id"})," and its ",(0,i.jsx)("code",{children:"group"}),". Note that any other feature can be added to nodes here."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:"links"})," is another array listing the connections. They are defined by a",(0,i.jsx)("code",{children:"source"})," and a ",(0,i.jsx)("code",{children:"target"})," and optionnaly with a ",(0,i.jsx)("code",{children:"value"}),"."]})]}),(0,i.jsx)(h.H,{text:"Explain how to build this data structure from various initial formats"}),(0,i.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,i.jsxs)("p",{children:["The goal here is to create a ",(0,i.jsx)("code",{children:"ArcDiagram"})," component that will be stored in a ",(0,i.jsx)("code",{children:"ArcDiagram.tsx"})," file. This component requires 3 props to render: a ",(0,i.jsx)("code",{children:"width"}),", a ",(0,i.jsx)("code",{children:"height"})," and some"," ",(0,i.jsx)("code",{children:"data"}),"."]}),(0,i.jsxs)("p",{children:["The shape of the ",(0,i.jsx)("code",{children:"data"})," is described above. The"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"})," will be used to render an"," ",(0,i.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the arc diagram."]}),(0,i.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our"," ",(0,i.jsx)("code",{children:"ArcDiagram"})," component:"]}),(0,i.jsx)(o.d,{code:S}),(0,i.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the SVG ",(0,i.jsx)("code",{children:"circle"}),", but it's React that will render them in the ",(0,i.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,i.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,i.jsx)("a",{href:"https://www.d3-graph-gallery.com",children:"d3.js examples"}),"."]}),(0,i.jsx)("h2",{id:"Nodes",children:"Draw the nodes"}),(0,i.jsxs)("p",{children:["Positionning the nodes relies on a"," ",(0,i.jsx)("a",{href:"https://github.com/d3/d3-scale#scalePoint",children:"point scale"})," ","implement in the ",(0,i.jsx)("code",{children:"scalePoint()"})," function of d3."]}),(0,i.jsxs)("p",{children:["The ",(0,i.jsx)("code",{children:"group"})," property of each node can be used to create an categoric color scale."]}),(0,i.jsxs)("p",{children:["Once the scales are available, it is just a matter of looping through all nodes and render them with several ",(0,i.jsx)("code",{children:"circle"})," SVG elements."]}),(0,i.jsx)(o.d,{code:N}),(0,i.jsx)("p",{children:"Resulting in a few dots being the basis of our ongoing arc diagram \uD83D\uDD25."}),(0,i.jsx)(d.$,{VizComponent:k,vizName:"ArcDiagramNodeOnly",maxWidth:500,height:150,caption:"First step of our ongoing arc diagram: the nodes are displayed at the bottom of the figure."}),(0,i.jsx)("h2",{id:"connections",children:"Draw the connections"}),(0,i.jsxs)("p",{children:["We now have to draw the ",(0,i.jsx)("b",{children:"connections"})," between nodes using"," ",(0,i.jsx)("b",{children:"arcs"}),". All the connections are listed in the ",(0,i.jsx)("b",{children:"links"})," property of the dataset. So it is just a matter of looping through them and draw some SVG for each."]}),(0,i.jsxs)("p",{children:["Drawing an arc in SVG can be done using a ",(0,i.jsx)("code",{children:"path"})," element."," "]}),(0,i.jsxs)("p",{children:[(0,i.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d#path_commands",children:"Six types"})," ","of ",(0,i.jsx)("code",{children:"path"})," commands exist. The one we need here is the"," ",(0,i.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d#elliptical_arc_curve",children:"Elliptical Arc Curve"}),". Its syntax is a bit complicated but here is a function that will get the ",(0,i.jsx)("code",{children:"d"})," attribute of the path we need from the coordinates of 2 points:"]}),(0,i.jsx)(o.d,{code:E}),(0,i.jsxs)("p",{children:["We can call this function for each link and pass the result to a"," ",(0,i.jsx)("code",{children:"path"}),"element. It results in our first basic arc diagram \uD83D\uDE0B"]}),(0,i.jsx)(d.$,{VizComponent:f,vizName:"ArcDiagramBasic",maxWidth:500,height:300,caption:"Add arcs using a custom functionn that draws some elliptical arc curve in SVG."}),(0,i.jsx)(l.r,{chartId:"arc"}),(0,i.jsx)(c.Z,{chartId:"arc"}),(0,i.jsx)("h2",{id:"variations",children:"Variations"}),(0,i.jsxs)("p",{children:["Once you've understood how to build a basic arc diagram with d3 and react, it opens an infinite world of ",(0,i.jsx)("b",{children:"customization"}),". Here are a few examples highlighting what it is possible to do with arc diagrams."]}),(0,i.jsx)("p",{children:"Click on the overview below to get details and code."}),(0,i.jsx)("br",{}),(0,i.jsx)(A.Z,{images:["vertical-arc-diagram.png"]}),(0,i.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,i.jsx)(s.Z,{chartFamily:"flow"}),(0,i.jsx)("div",{className:"mt-20"})]})}let T='\nexport const data = {\n  nodes: [\n      { id: "Myriel", group: \'team1\' },\n      { id: "Anne", group: \'team1\' },\n      ...\n  ],\n  links: [\n      { source: "Anne", target: "Myriel", value: 1 },\n      { source: "Napoleon", target: "Myriel", value: 1 },\n      ...\n  ]\n}\n'.trim(),S='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype ArcDiagramProps = {\n  width: number;\n  height: number;\n  data: number[];\n};\n\nexport const ArcDiagram = ({ width, height, data }: ArcDiagramProps) => {\n\n  // read the data\n  // compute the nodes position\n  // build the arcs\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render all the arcs and circles\n      </svg>\n    </div>\n  );\n};\n'.trim(),N="\nconst xScale = d3.scalePoint().range([0, boundsWidth]).domain(allNodeNames);\n\nconst colorScale = d3\n  .scaleOrdinal<string>()\n  .domain(allNodeGroups)\n  .range(COLORS);\n\nconst allNodes = data.nodes.map((node) => {\n  return (\n    <circle\n      key={node.id}\n      cx={xScale(node.id)}\n      cy={boundsHeight}\n      r={8}\n      fill={colorScale(node.group)}\n    />\n  );\n});\n".trim(),E='\nconst horizontalArcGenerator = (\n  xStart,\n  yStart,\n  xEnd,\n  yEnd\n) => {\n  return [\n    // the arc starts at the coordinate xStart, xEnd\n    "M",\n    xStart,\n    yStart,\n\n    // A means we\'re gonna build an Elliptical Arc Curve\n    "A",\n    (xStart - xEnd) / 2,    // rx: first radii of the ellipse (inflexion point)\n    (xStart - xEnd) / 2,    // ry: second radii of the ellipse  (inflexion point)\n    0,                      // angle: rotation (in degrees) of the ellipse relative to the x-axis\n    1,                      // large-arc-flag: large arc (1) or small arc (0)\n    xStart < xEnd ? 1 : 0,  // sweep-flag: the clockwise turning arc (1) or counterclockwise turning arc (0)\n\n    // Position of the end of the arc\n    xEnd,\n    ",",\n    yEnd,\n  ].join(" ");\n};\n'.trim()}},function(e){e.O(0,[2343,7754,2604,7823,8190,3710,2594,693,6588,9774,2888,179],function(){return e(e.s=58930)}),_N_E=e.O()}]);