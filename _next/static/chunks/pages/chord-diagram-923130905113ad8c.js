(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4594],{13827:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/chord-diagram",function(){return t(9397)}])},90505:function(e,n,t){"use strict";t.d(n,{r:function(){return c}});var r=t(85893),s=t(41664),i=t.n(s),o=t(28843),d=t(66717),a=t(3572);let c=e=>{let{chartId:n}=e,t=o.c.filter(e=>e.id===n)[0].label;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h2",{id:"responsiveness",children:"Responsive "+t+" with react"}),(0,r.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,r.jsx)("code",{children:"width"})," and ",(0,r.jsx)("code",{children:"height"})," and will render a ",t," of those dimensions."]}),(0,r.jsxs)("p",{children:["Making the ",t," responsive requires adding a ",(0,r.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,r.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,r.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,r.jsx)(d.U,{title:(0,r.jsxs)("span",{children:[(0,r.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,r.jsx)(a.d,{code:h})}),(0,r.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,r.jsx)(i(),{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{})]})},h='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},66717:function(e,n,t){"use strict";t.d(n,{U:function(){return s}});var r=t(85893);let s=e=>{let{title:n,children:t}=e;return(0,r.jsxs)("details",{className:"bg-gray-50 py-2 px-4 rounded-md my-2",children:[(0,r.jsx)("summary",{className:"cursor-pointer",children:n}),(0,r.jsx)("div",{className:"pt-4",children:t})]})}},18893:function(e,n,t){"use strict";t.d(n,{H:function(){return s}});var r=t(85893);let s=e=>{let{text:n}=e;return(0,r.jsxs)("blockquote",{className:"mt-10 opacity-20",children:[(0,r.jsx)("b",{className:"text-reactGallery mr-4",children:"ToDo"}),n]})}},9397:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return R}});var r=t(85893);t(67294);var s=t(80153),i=t(43710),o=t(61651),d=t(3572),a=t(81122),c=t(26820),h=t(90505);let l=[[11975,0,8916,2868],[1951,10048,2060,6171],[0,16145,8090,8045],[1013,990,940,6907]];var u=t(78995);let x=e=>{let{width:n,height:t,data:s}=e,i=u.fFo().padAngle(.05).sortSubgroups(u.$1i),o=i(s),d=Math.min(n,t)/2-30,a=u.Nb1(),c=o.groups.map((e,n)=>{let t=a({innerRadius:d-15,outerRadius:d,startAngle:e.startAngle,endAngle:e.endAngle});if(t)return(0,r.jsx)("path",{d:t,fill:"#69b3a2"},n)}),h=u.N22().radius(d-15-5),l=o.map((e,n)=>{let t=h(e);return(0,r.jsx)("path",{d:t,fill:"#69b3a2",opacity:".3"},n)});return(0,r.jsx)("div",{children:(0,r.jsx)("svg",{width:n,height:t,children:(0,r.jsxs)("g",{transform:"translate(".concat(n/2,", ").concat(t/2,")"),children:[c,l]})})})},j=e=>{let{width:n=700,height:t=400}=e;return 0===n?null:(0,r.jsx)(x,{data:l,width:n,height:t})};var p=t(41664),m=t.n(p);let g=[[11975,0,8916,2868],[1951,10048,2060,6171],[0,16145,8090,8045],[1013,990,940,6907]],f=e=>{let{width:n,height:t,data:s}=e,i=u.fFo().padAngle(.05).sortSubgroups(u.$1i),o=i(s),d=Math.min(n,t)/2-30,a=u.Nb1(),c=o.groups.map((e,n)=>{let t=a({innerRadius:d-15,outerRadius:d,startAngle:e.startAngle,endAngle:e.endAngle});if(t)return(0,r.jsx)("path",{d:t,fill:"#69b3a2"},n)});return(0,r.jsx)("div",{children:(0,r.jsx)("svg",{width:n,height:t,children:(0,r.jsx)("g",{transform:"translate(".concat(n/2,", ").concat(t/2,")"),children:c})})})},b=e=>{let{width:n=700,height:t=400}=e;return 0===n?null:(0,r.jsx)(f,{data:g,width:n,height:t})};var w=t(56438);let v=[[11975,0,8916,2868],[1951,10048,2060,6171],[0,16145,8090,8045],[1013,990,940,6907]],y=["#e0ac2b","#e85252","#6689c6","#9a6fb0","#a53253"],A=e=>{let{width:n,height:t,data:s,groups:i}=e,o=u.fFo().padAngle(.05).sortSubgroups(u.$1i),d=o(s),a=Math.min(n,t)/2-30,c=u.Nb1(),h=d.groups.map((e,n)=>{let t=c({innerRadius:a-15,outerRadius:a,startAngle:e.startAngle,endAngle:e.endAngle});if(t)return(0,r.jsx)("path",{d:t,fill:y[e.index]},n)}),l=u.N22().radius(a-15-5),x=d.map((e,n)=>{let t=l(e),s=y[e.source.index];return(0,r.jsx)("path",{d:t,fill:s,stroke:s,strokeOpacity:".4",fillOpacity:".3"},n)}),j=d.groups.map((e,n)=>{let t={innerRadius:a-15,outerRadius:a,startAngle:e.startAngle,endAngle:e.endAngle},s=c.centroid(t);c(t);let o={innerRadius:a-15+20,outerRadius:a+20,startAngle:e.startAngle,endAngle:e.endAngle},d=c.centroid(o),h=d[0]>0,l=d[0]+50*(h?1:-1),u=i[e.index]+" ("+e.value+")";return(0,r.jsxs)("g",{children:[(0,r.jsx)("circle",{cx:s[0],cy:s[1],r:2}),(0,r.jsx)("line",{x1:s[0],y1:s[1],x2:d[0],y2:d[1],stroke:"black",fill:"black"}),(0,r.jsx)("line",{x1:d[0],y1:d[1],x2:l,y2:d[1],stroke:"black",fill:"black"}),(0,r.jsx)("text",{x:l+(h?2:-2),y:d[1],textAnchor:h?"start":"end",dominantBaseline:"middle",fontSize:14,children:u})]},n)});return(0,r.jsx)("div",{children:(0,r.jsx)("svg",{width:n,height:t,children:(0,r.jsxs)("g",{transform:"translate(".concat(n/2,", ").concat(t/2,")"),children:[h,x,j]})})})},k=e=>{let{width:n=700,height:t=400}=e;return 0===n?null:(0,r.jsx)(A,{data:v,width:n,height:t,groups:["Barcelona","Paris","Dakar","NY"]})};var D=t(18893);let N=(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("p",{children:["A ",(0,r.jsx)("a",{href:"https://www.data-to-viz.com/graph/chord.html",children:"chord diagram"})," ","represents ",(0,r.jsx)("b",{children:"flows"})," between several entities called ",(0,r.jsx)("b",{children:"nodes"}),". Each node is represented by a fragment on the outer part of the circular layout. Then, ",(0,r.jsx)("b",{children:"arcs"})," are drawn between each entities. The size of the arc is proportional to the importance of the flow.."]}),(0,r.jsxs)("p",{children:["Building a chord diagram with React and D3.js relies on the"," ",(0,r.jsx)("code",{children:"d3-chord"})," module that computes the node and arc positions for us. ",(0,r.jsx)("code",{children:"React"})," can then be used to draw everything in SVG. This page is a step by step tutorial with code sandboxes. It will teach you how to build a ",(0,r.jsx)("code",{children:"ChordDiagram"})," component."]})]});function R(){return(0,r.jsxs)(s.A,{title:"How to build a chord diagram with React and D3.",seoDescription:"A step-by-step guide to build your very own chord diagram from scratch. Comes with explanations, code sandboxes, and ready-to-use templates.",children:[(0,r.jsx)(i.Z,{title:"Chord diagram",description:N,chartType:"chordDiagram"}),(0,r.jsx)("h2",{id:"data",children:"The Data"}),(0,r.jsxs)("p",{children:["The dataset required to build a chord diagram is a ",(0,r.jsx)("b",{children:"square matrix"}),". It has a dimension of ",(0,r.jsx)("code",{children:"n x n"})," where ",(0,r.jsx)("code",{children:"n"})," is the number of ",(0,r.jsx)("b",{children:"nodes"}),"."]}),(0,r.jsxs)("p",{children:["In javascript, this matrix is represented as an"," ",(0,r.jsxs)("b",{children:["array of ",(0,r.jsx)("code",{children:"n"})," array"]}),". Each individual array also has ",(0,r.jsx)("code",{children:"n"})," items. The matrix of flow has a ",(0,r.jsx)("b",{children:"direction"}),": the second item of the third row gives the flow from element 2 to element 3."]}),(0,r.jsxs)("p",{children:["Usually an additional array is provided, giving the ",(0,r.jsx)("b",{children:"name"})," of each node."]}),(0,r.jsx)("br",{}),(0,r.jsx)("p",{children:"Here is a minimal example of the data structure:"}),(0,r.jsx)(d.d,{code:T}),(0,r.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,r.jsxs)("p",{children:["The goal here is to create a ",(0,r.jsx)("code",{children:"ChordDiagram"})," component that will be stored in a ",(0,r.jsx)("code",{children:"ChordDiagram.tsx"})," file. This component requires 3 props to render: a ",(0,r.jsx)("code",{children:"width"}),", a ",(0,r.jsx)("code",{children:"height"}),", some ",(0,r.jsx)("code",{children:"data"})," and a list of ",(0,r.jsx)("code",{children:"names"}),"."]}),(0,r.jsxs)("p",{children:["The shape of the ",(0,r.jsx)("code",{children:"data"})," is described above. The"," ",(0,r.jsx)("code",{children:"width"})," and ",(0,r.jsx)("code",{children:"height"})," will be used to render an"," ",(0,r.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the chord diagram."]}),(0,r.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our"," ",(0,r.jsx)("code",{children:"ChordDiagram"})," component:"]}),(0,r.jsx)(d.d,{code:C}),(0,r.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the SVG ",(0,r.jsx)("code",{children:"circle"}),", but it's React that will render them in the ",(0,r.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,r.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,r.jsx)("a",{href:"https://www.d3-graph-gallery.com",children:"d3.js examples"}),"."]}),(0,r.jsxs)("h2",{id:"chord()",children:["The ",(0,r.jsx)("code",{children:"chord()"})," function"]}),(0,r.jsxs)("p",{children:["We need to transform the flow matrix described in the"," ",(0,r.jsx)(m(),{href:"#data",children:"data"})," section into a list of node and connection coordinates. This is easy thanks to the ",(0,r.jsx)("code",{children:"chord()"})," ","function of d3.js."]}),(0,r.jsx)("p",{children:"The function can be used as follow:"}),(0,r.jsx)(d.d,{code:z}),(0,r.jsxs)("p",{children:["The returned object (",(0,r.jsx)("code",{children:"chord"})," in this example) is an array listing all the connections. For each, details about the"," ",(0,r.jsx)("code",{children:"source"})," and the ",(0,r.jsx)("code",{children:"target"})," are provided:"]}),(0,r.jsx)(d.d,{code:F}),(0,r.jsxs)("p",{children:["Last but not least, the array also has a ",(0,r.jsx)("code",{children:"group"})," property with details about all nodes of the chord diagram."]}),(0,r.jsx)(w.J,{href:"https://github.com/d3/d3-chord",isFilled:!0,size:"sm",children:"chord() official documentation"}),(0,r.jsx)("h2",{id:"Nodes",children:"Draw the nodes"}),(0,r.jsxs)("p",{children:["Nodes are drawn using the ",(0,r.jsx)("code",{children:"group"})," property of the"," ",(0,r.jsx)("code",{children:"chord"})," object computed above. For each group, the"," ",(0,r.jsx)("b",{children:"start"})," and ",(0,r.jsx)("b",{children:"end"})," angles are provided."]}),(0,r.jsxs)("p",{children:["From this information it is possible to draw an arc thanks to the"," ",(0,r.jsx)("code",{children:"arc()"})," function of d3. It is exactly the same process as for a ",(0,r.jsx)(m(),{href:"donut",children:"donut chart"}),". Please visit the donut section of the gallery for more explanation!"]}),(0,r.jsx)(w.J,{href:"donut",isFilled:!0,size:"sm",children:"Donut section"}),(0,r.jsx)(a.$,{VizComponent:b,vizName:"ChordDiagramNodeOnly",maxWidth:400,height:400,caption:"Nodes are drawn thanks to the arc() function of d3.js, like for a donut chart."}),(0,r.jsx)("h2",{id:"connections",children:"Draw the connections"}),(0,r.jsxs)("p",{children:["We now have to draw the connections between nodes that are listed in the initial square matrix (",(0,r.jsx)("code",{children:"data"}),")."]}),(0,r.jsxs)("p",{children:["The connection coordinates are listed in the ",(0,r.jsx)("code",{children:"chord"})," object computed in the ",(0,r.jsx)(m(),{href:"#chord()",children:"previous section"}),". For each connection we know the ",(0,r.jsx)("code",{children:"startAngle"})," and ",(0,r.jsx)("code",{children:"endAngle"})," ","of the ",(0,r.jsx)("code",{children:"source"})," and of the",(0,r.jsx)("code",{children:"target"}),"."]}),(0,r.jsxs)("p",{children:["This is everything we need to compute the connections thanks to the"," ",(0,r.jsx)("code",{children:"ribbon()"})," function of d3 as follow:"]}),(0,r.jsx)(d.d,{code:E}),(0,r.jsx)(a.$,{VizComponent:j,vizName:"ChordDiagramRibbon",maxWidth:400,height:400,caption:"Connections between nodes are drawn thanks to the ribbon() function of d3.js."}),(0,r.jsxs)(w.J,{href:"https://github.com/d3/d3-chord#ribbon",isFilled:!0,size:"sm",children:[(0,r.jsx)("code",{children:"d3.ribbon()"})," documentation"]}),(0,r.jsx)(h.r,{chartId:"chordDiagram"}),(0,r.jsx)(c.Z,{chartId:"chordDiagram"}),(0,r.jsx)("h2",{id:"basic",children:"First chord diagram"}),(0,r.jsx)("p",{children:"I suggest 2 improvements to get a descent chord diagram:"}),(0,r.jsx)("h3",{children:"→ Colors"}),(0,r.jsxs)("p",{children:["Pretty straightforward to implement. You just need to create an"," ",(0,r.jsx)("code",{children:"array of colors"}),". Then, for each item to draw the"," ",(0,r.jsx)("code",{children:"index"})," is always available. It can be used to retrieve the color in the color array."]}),(0,r.jsx)("h3",{children:"→ Labels"}),(0,r.jsxs)("p",{children:["A new ",(0,r.jsx)("b",{children:"prop"})," needs to be passed to the component with a list of names for the nodes. I suggest to position labels as for a"," ",(0,r.jsx)(m(),{href:"donut",children:"donut chart"})," but many other possibilities are available."]}),(0,r.jsx)(a.$,{VizComponent:k,vizName:"ChordDiagramBasic",maxWidth:700,height:450,caption:"Connections between nodes are drawn thanks to the ribbon() function of d3.js."}),(0,r.jsx)(D.H,{text:"Add section on hover effect"}),(0,r.jsx)(D.H,{text:"Talk about chordDirected() and chordTranspose()"}),(0,r.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,r.jsx)(o.Z,{chartFamily:"flow"}),(0,r.jsx)("div",{className:"mt-20"})]})}let T="\n// matrix of flow\nconst data = [\n  [11975,  0, 8916, 2868],\n  [ 1951, 10048, 2060, 6171],\n  [ 0, 16145, 8090, 8045],\n  [ 1013,   990,  940, 6907]\n];\n\n// node names\nconst nodeNames = ['Barcelona', 'Paris', 'Dakar', 'NY']\n".trim(),C='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype ChordDiagramProps = {\n  width: number;\n  height: number;\n  data: number[];\n};\n\nexport const ChordDiagram = ({ width, height, data }: ChordDiagramProps) => {\n\n  // read the data\n  // compute the nodes and ribbon position\n  // build the arcs\n  // build the ribbon\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render all the arcs and ribbons\n      </svg>\n    </div>\n  );\n};\n'.trim(),z="\nconst chordGenerator = d3\n.chord()\n.padAngle(0.05) // padding between nodes\n.sortSubgroups(d3.descending);\n\nconst chord = chordGenerator(data);\n".trim(),F="\n[\n  // first connection: flow between node 1 and node 1\n  {\n    source: { index: 0, startAngle: 0, endAngle: 0.84, value: 11975 },\n    target: { index: 0, startAngle: 0, endAngle: 0.84, value: 11975\n    }\n  },\n  // second connection: flow between node 2 and node 1\n  {\n    source: { index: 1, startAngle: 3.01, endAngle: 3.15, value: 1951 },\n    target: { index: 1, startAngle: 1.67, endAngle: 1.67, value: 0\n    }\n  },\n  // ...\n]\n".trim(),E="\nconst allConnections = chord.map((connection, i) => {\n  const d = ribbonGenerator(connection);\n  return <path key={i} d={d} />;\n});\n".trim()}},function(e){e.O(0,[2343,7754,8995,7823,8190,3710,2594,6588,9774,2888,179],function(){return e(e.s=13827)}),_N_E=e.O()}]);