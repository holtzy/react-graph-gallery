(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5852],{36872:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/generative/perlin-noise-1D-animation",function(){return i(80913)}])},80913:function(e,n,i){"use strict";i.r(n),i.d(n,{default:function(){return g}});var t=i(85893),a=i(67294),r=i(80153),s=i(43710),o=i(61651),c=i(3572),l=i(81122),h=i(77048),f=i(72313);let u=e=>{let{width:n,height:i}=e,r=(0,a.useRef)(null),s=(0,a.useRef)(),o=(0,f.BYU)().range([i,0]).domain([-1,1]),c=(0,a.useMemo)(()=>(0,h.hA)(),[]),l=(0,a.useRef)(0);return(0,a.useEffect)(()=>{let e=!0;return function t(){let a=function(e,n,i){if(!e)return null;let t=window.devicePixelRatio||1;e.width=n*t,e.height=i*t,e.style.width="".concat(n,"px"),e.style.height="".concat(i,"px");let a=e.getContext("2d");return a&&(a.setTransform(1,0,0,1,0,0),a.scale(t,t)),a}(r.current,n,i);if(a){a.clearRect(0,0,n,i),a.fillStyle="#ebf4fa",a.fillRect(0,0,n,i),a.globalAlpha=1,a.lineWidth=2,a.beginPath();for(let e=0;e<n;e+=1){let n=c(.01*e+l.current,0),i=o(n);a.lineTo(e,i)}a.stroke(),l.current+=.015,e&&(s.current=requestAnimationFrame(t))}}(),()=>{e=!1,s.current&&cancelAnimationFrame(s.current)}},[n,i,c,o]),(0,t.jsx)("canvas",{ref:r,style:{display:"block",width:n,height:i}})},d=e=>{let{width:n=700,height:i=400}=e;return(0,t.jsx)(u,{width:n,height:i})},m=(0,t.jsx)(t.Fragment,{children:(0,t.jsx)("p",{children:"This example animates 1D Perlin noise, creating a smoothly evolving line chart. The offset is incremented at each animation frame, making the pattern move organically—perfect for generative art."})});function g(){return(0,t.jsxs)(r.A,{title:"Animated 1D Perlin Noise with React",seoDescription:"Animated 1D Perlin Noise with React",children:[(0,t.jsx)(s.Z,{title:(0,t.jsx)("h1",{children:"Animated 1D Perlin Noise"}),description:m,chartType:"generative"}),(0,t.jsx)("h2",{id:"animation",children:"Animated Perlin Noise"}),(0,t.jsx)("p",{children:"This chart visualizes 1D Perlin noise, but unlike the static version, the offset is automatically incremented at each animation frame. This creates a dynamic, flowing effect—ideal for generative art and creative coding."}),(0,t.jsx)("p",{children:"The animation is achieved by updating the x-offset in the noise function on every frame, causing the line to move smoothly across the canvas."}),(0,t.jsx)(l.$,{vizName:"GenArtPerlin1DAnimation",VizComponent:d,maxWidth:500,height:500,caption:(0,t.jsx)("span",{children:"Animated 1D Perlin noise visualization"})}),(0,t.jsx)("p",{children:"Here’s a code snippet showing the core animation logic:"}),(0,t.jsx)(c.d,{code:"\nconst offsetRef = useRef(0);\nuseEffect(() => {\n  function draw() {\n    // ... drawing logic ...\n    offsetRef.current += 0.01; // Animate offset\n    requestAnimationFrame(draw);\n  }\n  draw();\n  return () => cancelAnimationFrame(draw);\n}, [/* dependencies */]);\n        ".trim()}),(0,t.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,t.jsx)(o.Z,{chartFamily:"distribution"}),(0,t.jsx)("div",{className:"mt-20"})]})}}},function(e){e.O(0,[2343,7754,2313,7823,8190,3710,2594,3822,9774,2888,179],function(){return e(e.s=36872)}),_N_E=e.O()}]);