(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3891],{22938:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/radar-chart",function(){return t(17675)}])},52450:function(e,a,t){"use strict";t.d(a,{Z:function(){return o}});var n=t(85893);t(67294);var r=t(92050),s=t(49975),i=t(59942);function o(e){let{images:a}=e,t=r.F.filter(e=>a.includes(e.img)).map((e,a)=>(0,n.jsx)(s.X,{link:e.link,title:e.title,description:(0,n.jsx)("p",{children:e.description}),img:e.img,alt:e.alt},a));return(0,n.jsx)(i.E,{children:t})}},90505:function(e,a,t){"use strict";t.d(a,{r:function(){return l}});var n=t(85893),r=t(41664),s=t.n(r),i=t(28843),o=t(66717),d=t(3572);let l=e=>{let{chartId:a}=e,t=i.c.filter(e=>e.id===a)[0].label;return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h2",{id:"responsiveness",children:"Responsive "+t+" with react"}),(0,n.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,n.jsx)("code",{children:"width"})," and ",(0,n.jsx)("code",{children:"height"})," and will render a ",t," of those dimensions."]}),(0,n.jsxs)("p",{children:["Making the ",t," responsive requires adding a ",(0,n.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,n.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,n.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,n.jsx)(o.U,{title:(0,n.jsxs)("span",{children:[(0,n.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,n.jsx)(d.d,{code:c})}),(0,n.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,n.jsx)(s(),{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),(0,n.jsx)("br",{})]})},c='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},66717:function(e,a,t){"use strict";t.d(a,{U:function(){return r}});var n=t(85893);let r=e=>{let{title:a,children:t}=e;return(0,n.jsxs)("details",{className:"bg-gray-50 py-2 px-4 rounded-md my-2",children:[(0,n.jsx)("summary",{className:"cursor-pointer",children:a}),(0,n.jsx)("div",{className:"pt-4",children:t})]})}},18893:function(e,a,t){"use strict";t.d(a,{H:function(){return r}});var n=t(85893);let r=e=>{let{text:a}=e;return(0,n.jsxs)("blockquote",{className:"mt-10 opacity-20",children:[(0,n.jsx)("b",{className:"text-reactGallery mr-4",children:"ToDo"}),a]})}},17675:function(e,a,t){"use strict";t.r(a),t.d(a,{default:function(){return A}});var n=t(85893);t(67294);var r=t(80153),s=t(43710),i=t(61651),o=t(3572),d=t(81122),l=t(26820),c=t(90505),h=t(41664),x=t.n(h);let m={speed:5.1,acceleration:9.5,conso:1.4,safety:.1,style:90,price:7,name:"mercedes"};var p=t(72313);let u=(e,a)=>({x:a*Math.cos(e),y:a*Math.sin(e)}),j="lightGrey",g=e=>{let{outerRadius:a,xScale:t,axisConfig:r}=e,s=p.XBu(),i=r.map((e,r)=>{let i=t(e.name);if(void 0===i)return null;let o=s([[i,40],[i,a]]),d=u(i-Math.PI/2,a+10);return(0,n.jsxs)("g",{children:[(0,n.jsx)("path",{d:o,stroke:j,strokeWidth:.5,rx:1}),(0,n.jsx)("text",{x:d.x,y:d.y,fontSize:12,fill:j,textAnchor:d.x>0?"start":"end",dominantBaseline:"middle",children:e.name})]},r)}),o=[...[,,,,,].keys()].map((e,t)=>(0,n.jsx)("circle",{cx:0,cy:0,r:40+e*(a-40)/4,stroke:j,fill:"none"},t));return(0,n.jsxs)("g",{children:[i,o]})},f=e=>{let{width:a,height:t,data:r,axisConfig:s}=e,i=Math.min(a,t)/2-30,o=s.map(e=>e.name),d=p.tiA().domain(o).range([0,2*Math.PI]),l={};s.forEach(e=>{l[e.name]=p.s$j().domain([0,e.max]).range([40,i])});let c=p.XBu(),h=s.map(e=>{var a;let t=l[e.name],n=null!==(a=d(e.name))&&void 0!==a?a:0,s=t(r[e.name]);return[n,s]});h.push(h[0]);let x=c(h);return(0,n.jsx)("svg",{width:a,height:t,children:(0,n.jsxs)("g",{transform:"translate("+a/2+","+t/2+")",children:[(0,n.jsx)(g,{outerRadius:i,xScale:d,axisConfig:s}),(0,n.jsx)("path",{d:x,stroke:"#cb1dd1",strokeWidth:3,fill:"#cb1dd1",fillOpacity:.1})]})})},b=e=>{let{width:a=700,height:t=400}=e;return(0,n.jsx)(f,{data:m,width:a,height:t,axisConfig:[{name:"speed",max:10},{name:"acceleration",max:10},{name:"conso",max:10},{name:"safety",max:2},{name:"style",max:1e3},{name:"price",max:100}]})},w=[{speed:5.1,acceleration:9.5,conso:1.4,safety:.1,style:90,price:7,name:"mercedes"},{speed:4.9,acceleration:3,conso:9.4,safety:.2,style:590,price:76,name:"peugeot"},{speed:2.7,acceleration:1.2,conso:1.3,safety:.9,style:990,price:96,name:"honda"}],y=(e,a)=>({x:a*Math.cos(e),y:a*Math.sin(e)}),v="grey",k=e=>{let{outerRadius:a,xScale:t,axisConfig:r}=e,s=p.XBu(),i=r.map((e,r)=>{let i=t(e.name);if(void 0===i)return null;let o=s([[i,40],[i,a]]),d=y(i-Math.PI/2,a+10);return(0,n.jsxs)("g",{children:[(0,n.jsx)("path",{d:o,stroke:v,strokeWidth:.5,rx:1}),(0,n.jsx)("text",{x:d.x,y:d.y,fontSize:12,fill:v,textAnchor:d.x>0?"start":"end",dominantBaseline:"middle",children:e.name})]},r)}),o=[...[,,,,,].keys()].map((e,t)=>(0,n.jsx)("circle",{cx:0,cy:0,r:40+e*(a-40)/4,stroke:v,fill:"none"},t));return(0,n.jsxs)("g",{children:[i,o]})},R=e=>{let{width:a,height:t,data:r,axisConfig:s}=e,i=Math.min(a,t)/2-40,o=s.map(e=>e.name),d=p.tiA().domain(o).range([0,2*Math.PI]),l={};return s.forEach(e=>{l[e.name]=p.s$j().domain([0,e.max]).range([40,i])}),(0,n.jsx)("svg",{width:a,height:t,children:(0,n.jsx)("g",{transform:"translate("+a/2+","+t/2+")",children:(0,n.jsx)(k,{outerRadius:i,xScale:d,axisConfig:s})})})},M=e=>{let{width:a=700,height:t=400}=e;return(0,n.jsx)(R,{data:w,width:a,height:t,axisConfig:[{name:"speed",max:10},{name:"acceleration",max:10},{name:"conso",max:10},{name:"safety",max:2},{name:"style",max:1e3},{name:"price",max:100}]})},T=[{speed:5.1,acceleration:9.5,conso:1.4,safety:.1,style:90,price:7,name:"mercedes"},{speed:4.9,acceleration:3,conso:9.4,safety:.2,style:590,price:76,name:"peugeot"},{speed:2.7,acceleration:1.2,conso:1.3,safety:.9,style:990,price:96,name:"honda"}],I=(e,a)=>({x:a*Math.cos(e),y:a*Math.sin(e)}),D="lightGrey",N=e=>{let{outerRadius:a,xScale:t,axisConfig:r}=e,s=p.XBu(),i=r.map((e,r)=>{let i=t(e.name);if(void 0===i)return null;let o=s([[i,40],[i,a]]),d=I(i-Math.PI/2,a+10);return(0,n.jsxs)("g",{children:[(0,n.jsx)("path",{d:o,stroke:D,strokeWidth:.5,rx:1}),(0,n.jsx)("text",{x:d.x,y:d.y,fontSize:12,fill:D,textAnchor:d.x>0?"start":"end",dominantBaseline:"middle",children:e.name})]},r)}),o=[...[,,,,,].keys()].map((e,t)=>(0,n.jsx)("circle",{cx:0,cy:0,r:40+e*(a-40)/4,stroke:D,fill:"none"},t));return(0,n.jsxs)("g",{children:[i,o]})},S=["#e0ac2b","#e85252","#6689c6","#9a6fb0","#a53253","#69b3a2"],z=e=>{let{width:a,height:t,data:r,axisConfig:s}=e,i=Math.min(a,t)/2-30,o=s.map(e=>e.name),d=p.tiA().domain(o).range([0,2*Math.PI]),l={};s.forEach(e=>{l[e.name]=p.s$j().domain([0,e.max]).range([40,i])});let c=r.map(e=>e.name),h=p.PKp().domain(c).range(S),x=p.XBu(),m=r.map((e,a)=>{let t=s.map(a=>{var t;let n=l[a.name],r=null!==(t=d(a.name))&&void 0!==t?t:0,s=n(e[a.name]);return[r,s]});t.push(t[0]);let r=x(t);if(r)return(0,n.jsx)("path",{d:r,stroke:h(e.name),strokeWidth:3,fill:h(e.name),fillOpacity:.1},a)});return(0,n.jsx)("svg",{width:a,height:t,children:(0,n.jsxs)("g",{transform:"translate("+a/2+","+t/2+")",children:[(0,n.jsx)(N,{outerRadius:i,xScale:d,axisConfig:s}),m]})})},C=e=>{let{width:a=700,height:t=400}=e;return(0,n.jsx)(z,{data:T,width:a,height:t,axisConfig:[{name:"speed",max:10},{name:"acceleration",max:10},{name:"conso",max:10},{name:"safety",max:2},{name:"style",max:1e3},{name:"price",max:100}]})};var E=t(18893),W=t(52450);let P=(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("p",{children:["A"," ",(0,n.jsx)("a",{href:"https://www.data-to-viz.com/caveat/spider.html",children:"radar or spider or web chart"})," ","is a two-dimensional chart type designed to plot one or more series of values over ",(0,n.jsx)("b",{children:"multiple quantitative variables"}),". Each variable has its"," ",(0,n.jsx)("b",{children:"own axis"}),", all axes are joined in the ",(0,n.jsx)("b",{children:"center"})," of the figure."]}),(0,n.jsxs)("p",{children:["This page is a step-by-step guide on how to build your own radar chart for the web, using ",(0,n.jsx)("a",{href:"https://reactjs.org/",children:"React"})," (for rendering) and ",(0,n.jsx)("a",{href:"https://d3-graph-gallery.com/histogram",children:"D3.js"})," (to compute the axis, and shape coordinates)."]}),(0,n.jsxs)("p",{children:["It starts by describing how the ",(0,n.jsx)("b",{children:"data"})," should be organized and how to initialize the ",(0,n.jsx)("code",{children:"Radar"})," component. It then explains how to compute axis dynamically, and plot the lines and axis. Once this is done, it shows how to deal with scaling and how to add an interactive legend. \uD83D\uDE47‍♂️."]})]});function A(){return(0,n.jsxs)(r.A,{title:"Radar chart | React graph gallery",seoDescription:"A step-by-step guide on how to build your very own radar chart react component from scratch. Comes with explanations, code sandboxes, and ready-to-use templates.",children:[(0,n.jsx)(s.Z,{title:"Radar Chart",description:P,chartType:"radar"}),(0,n.jsx)("h2",{id:"data",children:"The Data"}),(0,n.jsxs)("p",{children:["The dataset provides several ",(0,n.jsx)("b",{children:"numeric"})," values for a set of data items."]}),(0,n.jsxs)("p",{children:["The suggested data structure is an array of ",(0,n.jsx)("code",{children:"object"}),", where each object is a data item. It can have as many numeric properties as needed. It also has a ",(0,n.jsx)("code",{children:"name"})," property that identifies the data item."]}),(0,n.jsx)("br",{}),(0,n.jsx)("p",{children:"Here is a minimal example of the data structure:"}),(0,n.jsx)(o.d,{code:B}),(0,n.jsxs)("p",{children:["Note: this is the same data format as for a"," ",(0,n.jsx)(x(),{href:"/correlogram",children:"correlogram"})," or for a"," ",(0,n.jsx)(x(),{href:"parallel-plot",children:"parralel chart"}),"."]}),(0,n.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,n.jsxs)("p",{children:["The goal here is to create a ",(0,n.jsx)("code",{children:"Radar"})," component that will be stored in a ",(0,n.jsx)("code",{children:"Radar.tsx"})," file. This component requires 4 props to render: a ",(0,n.jsx)("code",{children:"width"}),", a ",(0,n.jsx)("code",{children:"height"}),", some"," ",(0,n.jsx)("code",{children:"data"})," and an array providing the name of the variables to display."]}),(0,n.jsxs)("p",{children:["The shape of the ",(0,n.jsx)("code",{children:"data"})," is described above. The"," ",(0,n.jsx)("code",{children:"width"})," and ",(0,n.jsx)("code",{children:"height"})," will be used to render an"," ",(0,n.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the radar chart."]}),(0,n.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our ",(0,n.jsx)("code",{children:"Radar"})," ","component:"]}),(0,n.jsx)(o.d,{code:_}),(0,n.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the SVG ",(0,n.jsx)("code",{children:"path"}),", but it's React that will render them in the ",(0,n.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,n.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,n.jsx)("a",{href:"https://www.d3-graph-gallery.com",children:"d3.js examples"}),"."]}),(0,n.jsx)("h2",{id:"scales",children:"Scales"}),(0,n.jsxs)("p",{children:["Building a radar chart requires several ",(0,n.jsx)("b",{children:"scales"})," and ",(0,n.jsx)("b",{children:"axes"}),". Understanding how those scales work and how to draw the background grid using ",(0,n.jsx)("b",{children:"polar coordinates"})," is probably the trickiest part or the radar chart creation."]}),(0,n.jsxs)("p",{children:["D3.js comes with a handful set of"," ",(0,n.jsx)("a",{href:"https://github.com/d3/d3-scale",children:"predefined scales"}),"."," ",(0,n.jsx)("code",{children:"scaleBand"})," and ",(0,n.jsx)("code",{children:"scaleRadial"})," are the ones we are going to use here."]}),(0,n.jsx)("h3",{children:"→ X Scale"}),(0,n.jsxs)("p",{children:["We need only 1 X scale. This scale is gonna allocate an ",(0,n.jsx)("b",{children:"angle"})," for each variable name of the dataset. The first variable will be directed to the top of the figure, the second a few more radians clock-wise and so on."]}),(0,n.jsx)("p",{children:"This is how the scale is defined:"}),(0,n.jsx)(o.d,{code:X}),(0,n.jsx)("h3",{children:"→ Y Scales"}),(0,n.jsxs)("p",{children:["Several Y scales are required, one per variable in the dataset. The corresponding axes will be drawn from the center of the figure to the outer part, with an angle determined by the ",(0,n.jsx)("code",{children:"xScale"}),"."]}),(0,n.jsxs)("p",{children:["The y scales are computed using the ",(0,n.jsx)("code",{children:"scaleRadial()"})," function as follow. They are all stored in a ",(0,n.jsx)("code",{children:"yScales"})," object."]}),(0,n.jsx)(o.d,{code:G}),(0,n.jsx)("h2",{id:"grid",children:"Radar chart background grid"}),(0,n.jsxs)("p",{children:["Once those scales are available, we need to draw the"," ",(0,n.jsx)("b",{children:"background grid"})," of the radar chart."]}),(0,n.jsxs)("p",{children:["A bunch of options exist for this. Here I suggest to loop through the"," ",(0,n.jsx)("code",{children:"axisConfig"})," to draw the axes, and add some concentric circles to create a ",(0,n.jsx)("b",{children:"grid"}),"."]}),(0,n.jsxs)("p",{children:["Since the code is a bit long to create this grid, I strongly advise to place it in a separate component (",(0,n.jsx)("code",{children:"RadarGrid"})," here)."]}),(0,n.jsx)(d.$,{VizComponent:M,vizName:"RadarGridOnly",maxWidth:800,height:400,caption:"Background grid of a radar chart built with react and d3.js. 6 Variables are represented using 6 axes with polar coordinates"}),(0,n.jsxs)("p",{children:["Note that placing the labels requires to translate some ",(0,n.jsx)("b",{children:"polar"})," ","coordinates to ",(0,n.jsx)("b",{children:"cartesian"})," coordinates. This can be done using the following function:"]}),(0,n.jsx)(o.d,{code:O}),(0,n.jsx)("h2",{id:"1-group",children:"Radar chart with 1 group"}),(0,n.jsx)("p",{children:"Finally! ✨"}),(0,n.jsxs)("p",{children:["We can now ",(0,n.jsx)("code",{children:"map"})," through the data array and draw a"," ",(0,n.jsx)("b",{children:"path"})," per item thanks to the scales computed above."]}),(0,n.jsxs)("p",{children:["What's tricky here is that we are dealing with ",(0,n.jsx)("b",{children:"polar coordinates"}),". We have a set of points that are defined by an ",(0,n.jsx)("b",{children:"angle"})," (x scale) and by a distance to the center of the figure (y scale)."]}),(0,n.jsxs)("p",{children:["Fortunately, the ",(0,n.jsx)("code",{children:"lineRadial()"})," function of d3 is here to help. We can define a radial line generator using the following statement:"]}),(0,n.jsx)(o.d,{code:V}),(0,n.jsxs)("p",{children:["It works pretty much the same as the classic"," ",(0,n.jsx)(x(),{href:"line-chart",children:"line()"})," function of d3, but expects an angle and a distance instead of a ",(0,n.jsx)("code",{children:"x"})," and a ",(0,n.jsx)("code",{children:"y"})," ","position."]}),(0,n.jsx)(o.d,{code:q}),(0,n.jsx)("p",{children:"Note that in order to close the shape, we need to add the first data point again after reaching the last data point, to close the loop."}),(0,n.jsx)(d.$,{VizComponent:b,vizName:"RadarBasic",maxWidth:600,height:400,caption:"A first basic radar chart with only 1 group represented. Made with React and d3.js"}),(0,n.jsx)(c.r,{chartId:"radar"}),(0,n.jsx)(l.Z,{chartId:"radar"}),(0,n.jsx)("h2",{id:"several groups",children:"Radar chart with several groups"}),(0,n.jsxs)("p",{children:["The process to get a radar chart with ",(0,n.jsx)("b",{children:"several groups"})," is very similar to the previous example."]}),(0,n.jsxs)("p",{children:["We just need to create a ",(0,n.jsx)("b",{children:"color scale"})," and add a shape for each item of the dataset through a loop. Do not try to add too many groups on the same figure, it make it totally"," ",(0,n.jsx)("a",{href:"https://www.data-to-viz.com/caveat/spider.html",children:"unreadable"}),"."]}),(0,n.jsx)(d.$,{VizComponent:C,vizName:"RadarMultipleGroups",maxWidth:600,height:400,caption:"A radar chart with several groups displayed on the same figure. Made with React and d3.js"}),(0,n.jsx)(E.H,{text:"spider chart with small multiple to make it more readable"}),(0,n.jsx)("h2",{id:"animation",children:"Animation"}),(0,n.jsxs)("p",{children:["It is common to have a radar chart that is ",(0,n.jsx)("b",{children:"updated"})," when a button is clicked on the application. It is possible to implement a"," ",(0,n.jsx)("b",{children:"smooth, animated transitio"}),"n between states thanks to the"," ",(0,n.jsx)("code",{children:"react-spring"})," library."]}),(0,n.jsxs)("p",{children:["The ",(0,n.jsx)(x(),{href:"/example/radar-chart-animation",children:"following example"})," ","illustrates this with a real world example. The radar chart is animated, together with a ",(0,n.jsx)(x(),{href:"line-chart",children:"line"})," chart and a"," ",(0,n.jsx)(x(),{href:"/lollipop-plot",children:"lollipop"}),"."]}),(0,n.jsx)("p",{children:(0,n.jsx)("br",{})}),(0,n.jsx)(W.Z,{images:["radar-chart-animation.png"]}),(0,n.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,n.jsx)(i.Z,{chartFamily:"ranking"}),(0,n.jsx)("div",{className:"mt-20"})]})}let B="\nconst data = [\n  {var1: 5.1, var2: 3.5, ..., name: 'Mark'},\n  {var1: 4.9, var2: 3.0, ..., name: 'Rosa'},\n  ...\n]\n".trim(),_='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype DataItem = {\n  [variable: string]: number;\n} & { name: string };\n\n\ntype RadarProps = {\n  width: number;\n  height: number;\n  data: DataItem[];\n  variables: string[]\n};\n\nexport const Radar = ({ width, height, data, variables }: RadarProps) => {\n\n  // read the data & get a list of groups\n  // build X scale\n  // build Y scales: 1 per variable\n  // build color scales\n  // loop through variables to add axes\n  // loop through data items and through variables to draw lines\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render all the <lines>\n      </svg>\n    </div>\n  );\n};\n'.trim(),X="\nconst allVariableNames = axisConfig.map((axis) => axis.name);\n\n// The x scale provides an angle for each variable of the dataset\nconst xScale = d3\n  .scaleBand()\n  .domain(allVariableNames)\n  .range([0, 2 * Math.PI]);\n".trim(),G="\n// Compute the y scales: 1 scale per variable.\n// Provides the distance to the center.\nlet yScales: { [name: string]: YScale } = {};\n\naxisConfig.forEach((axis) => {\n  yScales[axis.name] = d3\n    .scaleRadial()\n    .domain([0, axis.max])\n    .range([INNER_RADIUS, outerRadius]);\n});\n\n".trim(),O="\nexport const polarToCartesian = (angle: number, distance: number) => {\n  const x = distance * Math.cos(angle);\n  const y = distance * Math.sin(angle);\n  return { x, y };\n};\n".trim(),V="\n// Create a radial line generator\nconst lineGenerator = d3.lineRadial();\n".trim(),q="\n// Use the radial line generator\nconst path = lineGenerator([\n  [0, 100], // first data point, 0 is its angle, 100 is its distance to the center\n  [Math.PI / 2, 50], // second data point = second variable\n  [Math.PI, 10],\n]);\n\n// Result is a path that you can pass to the d argument of a SVG <path>\n// console.log(path)\n// M0,-100 L50,-3.06 L1.2246,10\n\n".trim()}},function(e){e.O(0,[2343,7754,2313,7823,8190,3710,2594,693,6588,9774,2888,179],function(){return e(e.s=22938)}),_N_E=e.O()}]);