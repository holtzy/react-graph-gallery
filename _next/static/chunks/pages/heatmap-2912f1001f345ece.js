(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9094],{73967:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/heatmap",function(){return n(1524)}])},90505:function(e,t,n){"use strict";n.d(t,{r:function(){return d}});var i=n(85893),s=n(41664),a=n.n(s),o=n(28843),r=n(66717),l=n(3572);let d=e=>{let{chartId:t}=e,n=o.c.filter(e=>e.id===t)[0].label;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{id:"responsiveness",children:"Responsive "+n+" with react"}),(0,i.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"})," and will render a ",n," of those dimensions."]}),(0,i.jsxs)("p",{children:["Making the ",n," responsive requires adding a ",(0,i.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,i.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,i.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,i.jsx)(r.U,{title:(0,i.jsxs)("span",{children:[(0,i.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,i.jsx)(l.d,{code:h})}),(0,i.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,i.jsx)(a(),{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]})},h='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},66717:function(e,t,n){"use strict";n.d(t,{U:function(){return s}});var i=n(85893);let s=e=>{let{title:t,children:n}=e;return(0,i.jsxs)("details",{className:"bg-gray-50 py-2 px-4 rounded-md my-2",children:[(0,i.jsx)("summary",{className:"cursor-pointer",children:t}),(0,i.jsx)("div",{className:"pt-4",children:n})]})}},1524:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return B}});var i=n(85893),s=n(67294),a=n(80153),o=n(43710),r=n(61651),l=n(3572),d=n(81122);let h=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],c=[];for(let e=0;e<10;e++)for(let t=0;t<5;t++)c.push({x:h[e],y:h[t],value:40*Math.random()});var p=n(72313);let x={top:10,right:10,bottom:30,left:30},u=e=>{let{width:t,height:n,data:a}=e,o=t-x.right-x.left,r=n-x.top-x.bottom,l=(0,s.useMemo)(()=>[...new Set(a.map(e=>e.y))],[a]),d=(0,s.useMemo)(()=>[...new Set(a.map(e=>e.x))],[a]),h=(0,s.useMemo)(()=>p.tiA().range([0,o]).domain(d).padding(.01),[a,t]),c=(0,s.useMemo)(()=>p.tiA().range([r,0]).domain(l).padding(.01),[a,n]),[u,m]=p.Wem(a.map(e=>e.value));if(!u||!m)return null;let j=p.cJy().interpolator(p.sN9).domain([u,m]),f=a.map((e,t)=>(0,i.jsx)("rect",{r:4,x:h(e.x),y:c(e.y),width:h.bandwidth(),height:c.bandwidth(),opacity:1,fill:j(e.value),rx:5,stroke:"white"},t)),g=d.map((e,t)=>{var n;let s=null!==(n=h(e))&&void 0!==n?n:0;return(0,i.jsx)("text",{x:s+h.bandwidth()/2,y:r+10,textAnchor:"middle",dominantBaseline:"middle",fontSize:10,children:e},t)}),b=l.map((e,t)=>{var n;let s=null!==(n=c(e))&&void 0!==n?n:0;return(0,i.jsx)("text",{x:-5,y:s+c.bandwidth()/2,textAnchor:"end",dominantBaseline:"middle",fontSize:10,children:e},t)});return(0,i.jsx)("div",{children:(0,i.jsx)("svg",{width:t,height:n,children:(0,i.jsxs)("g",{width:o,height:r,transform:"translate(".concat([x.left,x.top].join(","),")"),children:[f,g,b]})})})},m=e=>{let{width:t=700,height:n=400}=e;return(0,i.jsx)(u,{data:c,width:t,height:n})};var j=n(41751);let f=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],g=[];for(let e=0;e<10;e++)for(let t=0;t<5;t++)g.push({x:f[e],y:f[t],value:40*Math.random()});let b={top:10,right:50,bottom:30,left:50},w=e=>{let{width:t,height:n,data:a,setHoveredCell:o}=e,r=t-b.right-b.left,l=n-b.top-b.bottom,d=(0,s.useMemo)(()=>[...new Set(a.map(e=>e.y))],[a]),h=(0,s.useMemo)(()=>[...new Set(a.map(e=>e.x))],[a]),[c=0,x=0]=p.Wem(a.map(e=>e.value)),u=(0,s.useMemo)(()=>p.tiA().range([0,r]).domain(h).padding(.01),[a,t]),m=(0,s.useMemo)(()=>p.tiA().range([l,0]).domain(d).padding(.01),[a,n]);var j=p.cJy().interpolator(p.sN9).domain([c,x]);let f=a.map((e,t)=>{let n=u(e.x),s=m(e.y);if(null!==e.value&&n&&s)return(0,i.jsx)("rect",{r:4,x:u(e.x),y:m(e.y),width:u.bandwidth(),height:m.bandwidth(),opacity:1,fill:j(e.value),rx:5,stroke:"white",onMouseEnter:t=>{o({xLabel:"group "+e.x,yLabel:"group "+e.y,xPos:n+u.bandwidth()+b.left,yPos:s+u.bandwidth()/2+b.top,value:Math.round(100*e.value)/100})},onMouseLeave:()=>o(null),cursor:"pointer"},t)}),g=h.map((e,t)=>{let n=u(e);return n?(0,i.jsx)("text",{x:n+u.bandwidth()/2,y:l+10,textAnchor:"middle",dominantBaseline:"middle",fontSize:10,children:e},t):null}),w=d.map((e,t)=>{let n=m(e);return n?(0,i.jsx)("text",{x:-5,y:n+m.bandwidth()/2,textAnchor:"end",dominantBaseline:"middle",fontSize:10,children:e},t):null});return(0,i.jsx)("svg",{width:t,height:n,children:(0,i.jsxs)("g",{width:r,height:l,transform:"translate(".concat([b.left,b.top].join(","),")"),children:[f,g,w]})})};var v=n(76715),y=n.n(v);let S=e=>{let{interactionData:t,width:n,height:s}=e;return t?(0,i.jsx)("div",{style:{width:n,height:s,position:"absolute",top:0,left:0,pointerEvents:"none"},children:(0,i.jsxs)("div",{className:y().tooltip,style:{position:"absolute",left:t.xPos,top:t.yPos},children:[(0,i.jsx)(k,{label:"x",value:t.xLabel}),(0,i.jsx)(k,{label:"y",value:t.yLabel}),(0,i.jsx)(k,{label:"value",value:String(t.value)})]})}):null},k=e=>{let{label:t,value:n}=e;return(0,i.jsxs)("div",{children:[(0,i.jsx)("b",{children:t}),(0,i.jsx)("span",{children:": "}),(0,i.jsx)("span",{children:n})]})},T=e=>{let{width:t,height:n,data:a}=e,[o,r]=(0,s.useState)(null);return(0,i.jsxs)("div",{style:{position:"relative"},children:[(0,i.jsx)(w,{width:t,height:n,data:a,setHoveredCell:r}),(0,i.jsx)(S,{interactionData:o,width:t,height:n})]})},A=e=>{let{width:t=700,height:n=400}=e;return(0,i.jsx)(T,{data:g,width:t,height:n})};var M=n(90505),D=n(41664),C=n.n(D),R=n(26820),z=n(53180);let N=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],E=[];for(let e=0;e<10;e++)for(let t=0;t<5;t++)E.push({x:N[e],y:N[t],value:40*Math.random()});let H={top:10,right:10,bottom:30,left:30},I=e=>{let{width:t,height:n,data:a}=e,o=(0,s.useRef)(null),r=t-H.right-H.left,l=n-H.top-H.bottom,d=(0,s.useMemo)(()=>[...new Set(a.map(e=>e.y))],[a]),h=(0,s.useMemo)(()=>[...new Set(a.map(e=>e.x))],[a]),c=(0,s.useMemo)(()=>p.tiA().range([0,r]).domain(h).padding(.01),[a,t]),x=(0,s.useMemo)(()=>p.tiA().range([l,0]).domain(d).padding(.01),[a,n]),[u,m]=p.Wem(a.map(e=>e.value));if(!u||!m)return null;let j=p.cJy().interpolator(p.sN9).domain([u,m]),f=h.map((e,t)=>{var n;let s=null!==(n=c(e))&&void 0!==n?n:0;return(0,i.jsx)("text",{x:s+c.bandwidth()/2,y:l+10,textAnchor:"middle",dominantBaseline:"middle",fontSize:10,children:e},t)}),g=d.map((e,t)=>{var n;let s=null!==(n=x(e))&&void 0!==n?n:0;return(0,i.jsx)("text",{x:-5,y:s+x.bandwidth()/2,textAnchor:"end",dominantBaseline:"middle",fontSize:10,children:e},t)});return(0,s.useEffect)(()=>{let e=o.current;if(!e)return;let i=e.getContext("2d");i&&(i.clearRect(0,0,t,n),a.forEach(e=>{let t=c(e.x),n=x(e.y);void 0!==t&&void 0!==n&&(i.fillStyle=j(e.value),i.strokeStyle="white",i.lineWidth=1,i.fillRect(t+H.left,n+H.top,c.bandwidth(),x.bandwidth()),i.strokeRect(t+H.left,n+H.top,c.bandwidth(),x.bandwidth()))}))},[a,t,n,c,x,j,h,d]),(0,i.jsxs)("div",{style:{position:"relative"},children:[(0,i.jsx)("svg",{width:t,height:n,children:(0,i.jsxs)("g",{width:r,height:l,transform:"translate(".concat([H.left,H.top].join(","),")"),children:[f,g]})}),(0,i.jsx)("div",{style:{position:"absolute",top:0,left:0},children:(0,i.jsx)("canvas",{ref:o,width:t,height:n})})]})},W=e=>{let{width:t=700,height:n=400}=e;return(0,i.jsx)(I,{data:E,width:t,height:n})},L=(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("p",{children:["A ",(0,i.jsx)("a",{href:"https://www.data-to-viz.com/graph/heatmap.html",children:"heat map"})," ","(or heatmap) is a chart type that shows the magnitude of a numeric variable as a color in two dimensions. This page is a step-by-step guide on how to build your own heatmap for the web, using"," ",(0,i.jsx)("a",{href:"https://reactjs.org/",children:"React"})," and"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com/heatmap",children:"D3.js"}),"."]}),(0,i.jsxs)("p",{children:["It starts by describing how the ",(0,i.jsx)("b",{children:"data"})," should be organized and potentially ",(0,i.jsx)("b",{children:"normalized"}),". It then shows how to initialize the"," ",(0,i.jsx)("b",{children:"heatmap component"}),", build band ",(0,i.jsx)("b",{children:"scales"})," and add rectangles to get a first heatmap. Last but not least, ",(0,i.jsx)("b",{children:"responsiveness"})," and the"," ",(0,i.jsx)("b",{children:"tooltip"})," are described in depth and a real dataset is used to get a heatmap application. \uD83D\uDE47‍♂️."]})]});function B(){return(0,i.jsxs)(a.A,{title:"How to build a heatmap with React and D3.",seoDescription:"A step-by-step guide to build your very own heatmap from scratch. Comes with explanations, code sandboxes, and ready-to-use templates.",children:[(0,i.jsx)(o.Z,{title:(0,i.jsxs)("h1",{children:["Heatmap"," ",(0,i.jsx)("span",{className:"text-gray-600 font-light hidden sm:inline",children:"with React and d3.js"})]}),description:L,chartType:"heatmap"}),(0,i.jsx)("h2",{id:"data",children:"The Data"}),(0,i.jsxs)("p",{children:["The dataset is usually an ",(0,i.jsx)("b",{children:"array"})," where each item provides information for a ",(0,i.jsx)("b",{children:"cell"})," of the heatmap."]}),(0,i.jsxs)("p",{children:["Each item is an ",(0,i.jsx)("b",{children:"object"})," that requires at least a"," ",(0,i.jsx)("code",{children:"value"})," property that is a ",(0,i.jsx)("b",{children:"number"}),". This number will be used to color the cell."]}),(0,i.jsxs)("p",{children:["Each item also requires an ",(0,i.jsx)("code",{children:"x"})," and a ",(0,i.jsx)("code",{children:"y"})," property, providing the position of the cell in the 2-d space. Note that those values are ",(0,i.jsx)("b",{children:"strings"})," since anything can be used. We are dealing with ",(0,i.jsx)("b",{children:"ordinal scales"})," here."]}),(0,i.jsx)("p",{children:"Note that you can add any kind of information to those cell objects. Such information can be included in tooltips later on."}),(0,i.jsx)("br",{}),(0,i.jsx)("p",{children:"Here is a minimal example of the data structure:"}),(0,i.jsx)(l.d,{code:_}),(0,i.jsx)("h2",{id:"skeleton",children:"Component skeleton"}),(0,i.jsxs)("p",{children:["The goal here is to create a ",(0,i.jsx)("code",{children:"Heatmap"})," component that will be stored in a ",(0,i.jsx)("code",{children:"Heatmap.tsx"})," file. This component requires 3 props to render: a ",(0,i.jsx)("code",{children:"width"}),", a ",(0,i.jsx)("code",{children:"height"}),", and some"," ",(0,i.jsx)("code",{children:"data"}),"."]}),(0,i.jsxs)("p",{children:["The shape of the ",(0,i.jsx)("code",{children:"data"})," is described above. The"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"})," will be used to render an"," ",(0,i.jsx)("code",{children:"svg"})," element in the DOM, in which we will insert the heatmap."]}),(0,i.jsxs)("p",{children:["To put it in a nutshell, that's the skeleton of our ",(0,i.jsx)("code",{children:"Heatmap"})," ","component:"]}),(0,i.jsx)(l.d,{code:Y}),(0,i.jsxs)("p",{children:["It's fundamental to understand that with this code organization, d3.js will be used to prepare the svg ",(0,i.jsx)("code",{children:"rect"}),", but it's react that will render them in the ",(0,i.jsx)("code",{children:"return()"})," statement. We won't use d3 methods like ",(0,i.jsx)("code",{children:"append"})," that you can find in usual"," ",(0,i.jsx)("a",{href:"https://www.d3-graph-gallery.com",children:"d3.js examples"}),"."]}),(0,i.jsx)("h2",{id:"scales",children:"Scales"}),(0,i.jsxs)("p",{children:["We need a way to translate a group name (e.g. group ",(0,i.jsx)("code",{children:"A"}),") in a coordinate on the X axis (e.g. ",(0,i.jsx)("i",{children:"x=103px"}),"). Same for the Y axis. We also need to transform a numeric value in a color. This is a concept called ",(0,i.jsx)("b",{children:"scaling"}),"."]}),(0,i.jsx)("h3",{children:"→ Data wrangling"}),(0,i.jsxs)("p",{children:["Building those scales requires an exhaustive list of all groups displayed on the X and Y axes. We also need to compute the ",(0,i.jsx)("b",{children:"min"})," ","and ",(0,i.jsx)("b",{children:"max"})," of the ",(0,i.jsx)("b",{children:"value"})," property to compute the color scale."]}),(0,i.jsxs)("p",{children:["As always, don't forget to wrap that kind of work in a"," ",(0,i.jsx)("code",{children:"useMemo"}),". You want to compute it only when the"," ",(0,i.jsx)("code",{children:"data"})," changes. This is how the computation looks like:"]}),(0,i.jsx)(l.d,{code:F}),(0,i.jsx)("h3",{children:"→ X and Y Scales"}),(0,i.jsxs)("p",{children:["The X and Y scale are"," ",(0,i.jsx)("a",{href:"https://github.com/d3/d3-scale#scaleBand",children:"band scales"}),", computed with the ",(0,i.jsx)("code",{children:"scaleBand()"})," function of d3.js. It means that a band of pixels is attributed to each group."]}),(0,i.jsxs)("p",{children:["For instance, calling the x scale with ",(0,i.jsx)("code",{children:'xScale("A")'})," will return ",(0,i.jsx)("code",{children:"0"}),", and ",(0,i.jsx)("code",{children:"xScale.bandwidth()"})," will return the width of the band (e.g. ",(0,i.jsx)("code",{children:"11px"}),")."]}),(0,i.jsx)(l.d,{code:P}),(0,i.jsxs)("p",{children:["The ",(0,i.jsx)("code",{children:"padding"})," is the space assigned between each band (=between each cell)."]}),(0,i.jsxs)("p",{children:["You can learn more about scales"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com/graph/custom_axis.html",children:"here"}),"."]}),(0,i.jsx)("h3",{children:"→ Color scale"}),(0,i.jsxs)("p",{children:["The color scale of a heatmap is ",(0,i.jsx)("b",{children:"tricky"})," to compute. We encode a"," ",(0,i.jsx)("b",{children:"numeric variable"})," that can have any kind of distribution into a"," ",(0,i.jsx)("b",{children:"color"}),", and that's not an easy step."]}),(0,i.jsxs)("p",{children:["Fortunately,"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com/graph/custom_color.html",children:"d3.js"})," ","(as always) has some life-saving utils to help. For instance, a sequential color scale can be applied with"," ",(0,i.jsx)("code",{children:"scaleSequential()"})," together with the ",(0,i.jsx)("code",{children:"inferno"})," ","color palette. Many other options could make sense, but that deserves its own blog post."]}),(0,i.jsx)(l.d,{code:q}),(0,i.jsx)("h2",{id:"rectangles",children:"Add rectangles, get a basic react heatmap"}),(0,i.jsx)("p",{children:"Finally! \uD83E\uDD2A"}),(0,i.jsxs)("p",{children:["With the scales available, rendering is just a matter of mapping through the dataset and creating a set of svg ",(0,i.jsx)("code",{children:"rect"})," for each cell."]}),(0,i.jsx)("p",{children:"Something like:"}),(0,i.jsx)(l.d,{code:V}),(0,i.jsxs)("p",{children:["Note that for the X and Y axis labels, just adding a set of svg"," ",(0,i.jsx)("code",{children:"text"})," element does a pretty good job, so no need to build complicated axis components as for a"," ",(0,i.jsx)("a",{href:"https://www.react-graph-gallery.com/scatter-plot",children:"scatterplot"}),"."]}),(0,i.jsx)("br",{}),(0,i.jsx)(d.$,{VizComponent:m,vizName:"HeatmapBasic",maxWidth:600,height:300,caption:"Most basic heatmap made with react and d3.js. d3 is used to compute scales, react for the rendering."}),(0,i.jsxs)("p",{children:["That's it, we have a first good looking ",(0,i.jsx)("b",{children:"heatmap"}),"!"]}),(0,i.jsxs)("p",{children:["The process used to build it with react is pretty close from building it with ",(0,i.jsx)("b",{children:"d3.js only"}),". (Check the pure d3 implementation"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com/heatmap",children:"here"}),")."]}),(0,i.jsx)(M.r,{chartId:"heatmap"}),(0,i.jsx)("h2",{id:"tooltip",children:"Tooltip"}),(0,i.jsxs)("p",{children:["Adding a tooltip is an important improvement for a heatmap. It allows us to get as much ",(0,i.jsx)("b",{children:"detail"})," as needed for each cell."]}),(0,i.jsxs)("p",{children:["There are ",(0,i.jsx)("b",{children:"many different approaches"})," to building tooltips, and I'm preparing a whole ",(0,i.jsx)(C(),{href:"/subscribe",children:"dedicated blog post"})," on the topic."]}),(0,i.jsxs)("p",{children:["In the example below I suggest using the same strategy as for"," ",(0,i.jsx)(C(),{href:"/scatter-plot#tooltip",children:"scatterplots"}),". So you probably want to read it ",(0,i.jsx)(C(),{href:"/subscribe",children:"there"})," for an in-depth explanation."]}),(0,i.jsx)("h3",{children:"→ Two layers: renderer and tooltip"}),(0,i.jsxs)("p",{children:["The first task is to split the ",(0,i.jsx)("code",{children:"Heatmap"})," component into 2 layers. The first layer called ",(0,i.jsx)("code",{children:"Renderer"})," will render the cells as seen previously. The second is an ",(0,i.jsx)("code",{children:"absolute"})," div put on top of the first one, used only to show the tooltip ",(0,i.jsx)("code",{children:"div"}),"."]}),(0,i.jsxs)("p",{children:["This way, the ",(0,i.jsx)("code",{children:"x"})," and ",(0,i.jsx)("code",{children:"y"})," coordinates of cells in the first layer match with the coordinate of the second layer."]}),(0,i.jsx)(l.d,{code:O}),(0,i.jsx)("h3",{children:"→ A common state"}),(0,i.jsxs)("p",{children:["On top of the 2 layers, we need a state that stores information about the cell being hovered over. You can create it with a"," ",(0,i.jsx)("code",{children:"useState"})," statement. I usually call it"," ",(0,i.jsx)("code",{children:"interactionData"})," in this website."]}),(0,i.jsxs)("p",{children:["This state is passed to the ",(0,i.jsx)("code",{children:"Tooltip"}),' layer. The function to update it (the "setter") is passed to the ',(0,i.jsx)("code",{children:"Renderer"})," layer. When the user hovers over a cell, this setter is triggered to update the state and thus the tooltip."]}),(0,i.jsx)(l.d,{code:U}),(0,i.jsx)("h3",{children:"→ Hover, update state, render tooltips"}),(0,i.jsxs)("p",{children:["The heatmap cells listen to ",(0,i.jsx)("code",{children:"onMouseEnter"})," events and update the tooltip state (",(0,i.jsx)("code",{children:"hoveredCell"}),") with accurate coordinates when it happens."]}),(0,i.jsxs)("p",{children:["This state is passed to the ",(0,i.jsx)("code",{children:"Tooltip"})," component. It renders a"," ",(0,i.jsx)("code",{children:"div"})," at the right position thanks to the information. A bit of smart css is used to make it pretty and include a ",(0,i.jsx)("b",{children:"little arrow"}),"."]}),(0,i.jsx)(d.$,{VizComponent:A,vizName:"HeatmapTooltip",maxWidth:650,height:300,caption:"This heatmap has a tooltip. Hover over a cell to get its exact value."}),(0,i.jsxs)("p",{children:["There is much more to say about tooltips but hopefully that should get you started. ",(0,i.jsx)(C(),{href:"/subscribe",children:"Subscribe"})," to the gallery, I'll post more on this topic soon."]}),(0,i.jsx)(R.Z,{chartId:"heatmap"}),(0,i.jsx)("h2",{id:"legend",children:"Color legend"}),(0,i.jsxs)("p",{children:["A heatmap uses a ",(0,i.jsx)("b",{children:"color scale"})," to encode a numeric value into a color. As a result, it is very much advised to add a color ",(0,i.jsx)("b",{children:"legend"})," ","to explicit how this color scale works."]}),(0,i.jsxs)("p",{children:["Let's consider a variable that goes from ",(0,i.jsx)("code",{children:"0"})," to"," ",(0,i.jsx)("code",{children:"100"}),". We want to encode ",(0,i.jsx)("code",{children:"0"})," in"," ",(0,i.jsx)("b",{children:(0,i.jsx)("span",{style:{color:"#69b3a2"},children:"blue"})})," ","and ",(0,i.jsx)("code",{children:"100"})," in"," ",(0,i.jsx)("b",{children:(0,i.jsx)("span",{style:{color:"purple"},children:"purple"})}),". The color scale is built thanks to the ",(0,i.jsx)("code",{children:"scaleLinear()"})," ","function of d3 as described ",(0,i.jsx)("a",{href:"#scales",children:"above"}),"."]}),(0,i.jsx)(d.$,{VizComponent:z.N,vizName:"ContinuousColorLegend",maxWidth:300,height:100,caption:"A color legend built with react, canvas and d3."})," ",(0,i.jsxs)("p",{children:["The trick here is to create a ",(0,i.jsx)("code",{children:"canvas"})," element of the desired"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"}),". Then, loop from left to right and add one rectangle for each pixel with the corresponding color using the same color scale as the one used on the chart. It's important to do it in ",(0,i.jsx)("code",{children:"canvas"}),": you don't want to add 300 elements in your DOM if your legend is 300px wide."]}),(0,i.jsxs)("p",{children:["Once the ",(0,i.jsx)("code",{children:"canvas"})," element is instantiated with a"," ",(0,i.jsx)("a",{href:"https://reactjs.org/docs/hooks-reference.html#useref",children:"ref"}),", you can draw the color scale thanks to a"," ",(0,i.jsx)("a",{href:"https://reactjs.org/docs/hooks-reference.html#useeffect",children:"useEffect"})," ","like this:"]}),(0,i.jsx)(l.d,{code:X}),(0,i.jsxs)("p",{children:["Then you probably want to add some ",(0,i.jsx)("b",{children:"ticks"})," on top of the color graduation to make it insightful."]}),(0,i.jsxs)("p",{children:[" ","Fortunately, the d3 ",(0,i.jsx)("code",{children:"linearScale"})," comes with a handy"," ",(0,i.jsx)("code",{children:"tick()"})," function. Basically, calling"," ",(0,i.jsx)("code",{children:"xScale.ticks(4)"})," will create an array with approximately 4 items, each providing everything you need to draw a"," ",(0,i.jsx)("b",{children:"smartly located tick"}),"."]}),(0,i.jsxs)("p",{children:["Color Legend is a big topic. There is much more to say about it and I'll post a complete blog post on the topic soon."," ",(0,i.jsx)(C(),{href:"/subscribe",children:"Subscribe"})," to the gallery if interested!"]}),(0,i.jsx)("h2",{id:"application",children:"Application to a real dataset"}),(0,i.jsx)("p",{children:"This is an application of the heatmap component described above to a real life dataset."}),(0,i.jsxs)("p",{children:["It's actually a recreation of"," ",(0,i.jsx)("a",{href:"http://graphics.wsj.com/infectious-diseases-and-vaccines/",children:"this chart"})," ","by Tynan DeBold and Dov Friedman. Data was available"," ",(0,i.jsx)("a",{href:"https://www.tycho.pitt.edu/data/",children:"here"}),". Chart was originally made with highcharts, original code being"," ",(0,i.jsx)("a",{href:"http://graphics.wsj.com/infectious-diseases-and-vaccines/js/script.min.js",children:"here"}),"."]}),(0,i.jsxs)("p",{children:["It was necessary to tweak the color scale, switching to a square transformation with ",(0,i.jsx)("code",{children:"scaleSequentialSqrt"}),". This allows to give less importance the extreme values that would absorb the variation otherwise."]}),(0,i.jsx)(d.$,{VizComponent:j.W,vizName:"HeatmapVaccination",maxWidth:800,height:550,caption:"Number of Measles infected people over 70-some years and across all 50 states. Can you guess when a vaccine was introduced?"}),(0,i.jsx)("h2",{id:"canvas",children:"Canvas heatmap"}),(0,i.jsx)("p",{children:"Let's use canvas to improve perf"}),(0,i.jsx)(d.$,{VizComponent:W,vizName:"HeatmapCanvas",maxWidth:600,height:300,caption:"Heatmap made using canvas instead of SVG."}),(0,i.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 my-3"}),(0,i.jsx)(r.Z,{chartFamily:"correlation"}),(0,i.jsx)("div",{className:"mt-20"})]})}let _="\nconst data = [\n  { x: 'A', y: 'A', value: 12 },\n  { x: 'B', y: 'A', value: 2 },\n  { x: 'C', y: 'A', value: 9 }\n];\n".trim(),Y='\nimport * as d3 from "d3"; // we will need d3.js\n\ntype HeatmapProps = {\n  width: number;\n  height: number;\n  data: { x: string; y: string, value: value: number | null }[];\n};\n\nexport const Heatmap = ({ width, height, data }: HeatmapProps) => {\n\n  // read the data\n  // do some stuff with d3 like building scales\n  // compute all the <rect>\n\n  return (\n    <div>\n      <svg width={width} height={height}>\n        // render all the <rect>\n      </svg>\n    </div>\n  );\n};\n'.trim(),F="\n// List of unique items that will appear on the heatmap Y axis\nconst allYGroups = useMemo(() => [...new Set(data.map((d) => d.y))], [data]);\n".trim(),P='\nconst xScale = useMemo(() => {\n  return d3\n    .scaleBand()\n    .range([0, boundsWidth])\n    .domain(allXGroups)\n    .padding(0.01);\n}, [data, width]);\n\n// xScale("A") -> 0\n// xScale.bandwidth() -> 11\n'.trim(),q="\nconst colorScale = d3\n  .scaleSequential()\n  .interpolator(d3.interpolateInferno)\n  .domain([min, max]);\n\n// colorScale(34) -> #d3a4e9\n".trim(),V="\nconst allRects = data.map((d, i) => {\n  if (d.value === null) {\n    return;\n  }\n  return (\n    <rect\n      key={i}\n      x={xScale(d.x)}\n      y={yScale(d.y)}\n      width={xScale.bandwidth()}\n      height={yScale.bandwidth()}\n      fill={colorScale(d.value)}\n    />\n  );\n});\n".trim(),X='\nuseEffect(() => {\n  const canvas = canvasRef.current;\n  const context = canvas?.getContext("2d");\n\n  if (!context) {\n    return;\n  }\n\n  // Loop on every pixels\n  for (let i = 0; i < width; ++i) {\n    context.fillStyle = colorScale((max * i) / width); // max is the last value of the domain of the color scale\n    context.fillRect(i, 0, 1, height);\n  }\n}, [width, height, colorScale]);\n'.trim(),O='\n<div style={{ position: "relative" }}>\n  <Renderer ..someProps />\n  <Tooltip ..someProps />\n</div>\n'.trim(),U="\nconst [hoveredCell, setHoveredCell] = useState<InteractionData | null>(null);\n".trim()},53180:function(e,t,n){"use strict";n.d(t,{N:function(){return l}});var i=n(85893),s=n(72313),a=n(67294);let o={top:38,right:0,bottom:38,left:0},r=e=>{let{height:t,colorScale:n,width:r}=e,l=(0,a.useRef)(null),d=r-o.right-o.left,h=t-o.top-o.bottom,c=n.domain(),p=c[c.length-1],x=s.BYU().range([0,d]).domain([0,p]),u=x.ticks(4).map(e=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("line",{x1:x(e),x2:x(e),y1:0,y2:h+10,stroke:"black"}),(0,i.jsx)("text",{x:x(e),y:h+20,fontSize:9,textAnchor:"middle",children:e})]}));return(0,a.useEffect)(()=>{let e=l.current,t=null==e?void 0:e.getContext("2d");if(t)for(let e=0;e<d;++e)t.fillStyle=n(p*e/d),t.fillRect(e,0,1,h)},[r,t,n]),(0,i.jsx)("div",{style:{width:r,height:t},children:(0,i.jsxs)("div",{style:{position:"relative",transform:"translate(".concat(o.left,"px,\n            ").concat(o.top,"px")},children:[(0,i.jsx)("canvas",{ref:l,width:d,height:h}),(0,i.jsx)("svg",{width:d,height:h,style:{position:"absolute",top:0,left:0,overflow:"visible"},children:u})]})})},l=e=>{let{width:t=700,height:n=400}=e,a=s.BYU().domain([0,100]).range(["#69b3a2","purple"]);return(0,i.jsx)(r,{width:t,height:n,colorScale:a})}},76715:function(e){e.exports={tooltip:"tooltip_tooltip__rVnEv"}}},function(e){e.O(0,[2343,7754,2313,7823,8190,3710,2594,6588,1751,9774,2888,179],function(){return e(e.s=73967)}),_N_E=e.O()}]);