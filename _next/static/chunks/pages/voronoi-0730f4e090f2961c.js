(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5989],{20225:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/voronoi",function(){return n(90110)}])},52450:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var i=n(85893);n(67294);var o=n(92050),s=n(49975),r=n(59942);function a(e){let{images:t}=e,n=o.F.filter(e=>t.includes(e.img)).map((e,t)=>(0,i.jsx)(s.X,{link:e.link,title:e.title,description:(0,i.jsx)("p",{children:e.description}),img:e.img,alt:e.alt},t));return(0,i.jsx)(r.E,{children:n})}},90505:function(e,t,n){"use strict";n.d(t,{r:function(){return d}});var i=n(85893),o=n(41664),s=n.n(o),r=n(28843),a=n(66717),l=n(3572);let d=e=>{let{chartId:t}=e,n=r.c.filter(e=>e.id===t)[0].label;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{id:"responsiveness",children:"Responsive "+n+" with react"}),(0,i.jsxs)("p",{children:["The component above is not responsive. It expects 2 props called"," ",(0,i.jsx)("code",{children:"width"})," and ",(0,i.jsx)("code",{children:"height"})," and will render a ",n," of those dimensions."]}),(0,i.jsxs)("p",{children:["Making the ",n," responsive requires adding a ",(0,i.jsx)("b",{children:"wrapper"})," component that gets the dimension of the parent ",(0,i.jsx)("code",{children:"div"}),", and listening to a potential dimension change. This is possible thanks to a hook called"," ",(0,i.jsx)("code",{children:"useDimensions"})," that will do the job for us."]}),(0,i.jsx)(a.U,{title:(0,i.jsxs)("span",{children:[(0,i.jsx)("code",{children:"useDimensions"}),": a hook to make your viz responsive"]}),children:(0,i.jsx)(l.d,{code:h})}),(0,i.jsxs)("p",{children:["I'm in the process of writing a complete blog post on the topic."," ",(0,i.jsx)(s(),{href:"/subscribe",children:"Subscribe to the project"})," to know when it's ready."]}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{})]})},h='\nexport const useDimensions = (targetRef: React.RefObject<HTMLDivElement>) => {\n\n  const getDimensions = () => {\n    return {\n      width: targetRef.current ? targetRef.current.offsetWidth : 0,\n      height: targetRef.current ? targetRef.current.offsetHeight : 0\n    };\n  };\n\n  const [dimensions, setDimensions] = useState(getDimensions);\n\n  const handleResize = () => {\n    setDimensions(getDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener("resize", handleResize);\n    return () => window.removeEventListener("resize", handleResize);\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n  }, []);\n\n  return dimensions;\n}\n'.trim()},66717:function(e,t,n){"use strict";n.d(t,{U:function(){return o}});var i=n(85893);let o=e=>{let{title:t,children:n}=e;return(0,i.jsxs)("details",{className:"bg-gray-50 py-2 px-4 rounded-md my-2",children:[(0,i.jsx)("summary",{className:"cursor-pointer",children:t}),(0,i.jsx)("div",{className:"pt-4",children:n})]})}},18893:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var i=n(85893);let o=e=>{let{text:t}=e;return(0,i.jsxs)("blockquote",{className:"mt-10 opacity-20",children:[(0,i.jsx)("b",{className:"text-reactGallery mr-4",children:"ToDo"}),t]})}},90110:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return _}});var i=n(85893),o=n(67294),s=n(80153),r=n(43710),a=n(61651),l=n(3572),d=n(81122);let h=[{x:10,y:10},{x:4,y:4},{x:35,y:90},{x:67,y:34},{x:89,y:65},{x:23,y:10},{x:12,y:32},{x:45,y:78},{x:67,y:98},{x:23,y:23}];var c=n(52604);let x=e=>{let{width:t,height:n,data:s}=e,r=c.BYU().domain([0,100]).range([0,t]),a=c.BYU().domain([0,100]).range([0,n]),l=s.map((e,t)=>(0,i.jsx)("circle",{cx:r(e.x),cy:a(e.y),r:4},t)),d=(0,o.useMemo)(()=>{let e=s.map(e=>[r(e.x),a(e.y)]);return c.oc6.from(e)},[]),h=d.render(),x=(0,i.jsx)("path",{d:h,stroke:"grey",fill:"transparent",opacity:.2}),u=(0,o.useMemo)(()=>d.voronoi([0,0,t,n]),[s]),p=u.render(),m=(0,i.jsx)("path",{d:p,stroke:"black",fill:"red"});return(0,i.jsxs)("svg",{width:t,height:n,children:[l,x,m]})},u=e=>{let{width:t=700,height:n=400}=e;return 0===t||0===n?null:(0,i.jsx)("div",{children:(0,i.jsx)(x,{width:t,height:n,data:h})})};var p=n(41664),m=n.n(p);let j=[{x:10,y:10},{x:4,y:4},{x:35,y:90},{x:67,y:34},{x:89,y:65},{x:23,y:10},{x:12,y:32},{x:45,y:78},{x:67,y:98},{x:23,y:23}],g=e=>{let{width:t,height:n,data:o}=e,s=c.BYU().domain([0,100]).range([0,t]),r=c.BYU().domain([0,100]).range([0,n]),a=o.map((e,t)=>(0,i.jsx)("circle",{cx:s(e.x),cy:r(e.y),r:4},t));return(0,i.jsx)("svg",{width:t,height:n,children:a})},y=e=>{let{width:t=700,height:n=400}=e;return(0,i.jsx)("div",{style:{marginTop:20,marginBottom:20},children:(0,i.jsx)(g,{width:t,height:n-40,data:j})})},f=[{x:10,y:10},{x:4,y:4},{x:35,y:90},{x:67,y:34},{x:89,y:65},{x:23,y:10},{x:12,y:32},{x:45,y:78},{x:67,y:98},{x:23,y:23}],v=e=>{let{width:t,height:n,data:s}=e,r=c.BYU().domain([0,100]).range([0,t]),a=c.BYU().domain([0,100]).range([0,n]),l=s.map((e,t)=>(0,i.jsx)("circle",{cx:r(e.x),cy:a(e.y),r:4},t)),d=(0,o.useMemo)(()=>{let e=s.map(e=>[r(e.x),a(e.y)]);return c.oc6.from(e)},[]),h=d.render(),x=(0,i.jsx)("path",{d:h,stroke:"grey",fill:"transparent",opacity:.8});return(0,i.jsxs)("svg",{width:t,height:n,children:[l,x]})},b=e=>{let{width:t=700,height:n=400}=e;return 0===t||0===n?null:(0,i.jsx)("div",{children:(0,i.jsx)(v,{width:t,height:n,data:f})})};var w=n(90505),k=n(26820);let D=[{x:10,y:10},{x:4,y:4},{x:35,y:90},{x:67,y:34},{x:89,y:65},{x:23,y:10},{x:12,y:32},{x:45,y:78},{x:67,y:98},{x:23,y:23}],z=e=>{let{width:t,height:n,data:s}=e,r=c.BYU().domain([0,100]).range([0,t]),a=c.BYU().domain([0,100]).range([0,n]),l=(0,o.useMemo)(()=>{let e=s.map(e=>[r(e.x),a(e.y)]);return c.oc6.from(e)},[s]),[d,h]=(0,o.useState)(null),x=(0,o.useMemo)(()=>l.voronoi([0,0,t,n]),[l,t,n]),u=s.map((e,t)=>{let n=x.renderCell(t);return(0,i.jsx)("path",{d:n,stroke:"grey",fill:"transparent",opacity:.1,onMouseOver:()=>{h(t)}},t)}),p=s.map((e,t)=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("circle",{cx:r(e.x),cy:a(e.y),r:4},t),d===t&&(0,i.jsx)("circle",{cx:r(e.x),cy:a(e.y),r:10,fill:"transparent",stroke:"red",strokeWidth:3},t)]}));return(0,i.jsxs)("svg",{width:t,height:n,children:[p,u]})},T=e=>{let{width:t=700,height:n=400}=e;return 0===t||0===n?null:(0,i.jsx)("div",{children:(0,i.jsx)(z,{width:t,height:n,data:D})})};var N=n(56438),R=n(18893),V=n(52450);let B=(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("p",{children:["A"," ",(0,i.jsx)("a",{href:"https://en.wikipedia.org/wiki/Voronoi_diagram",children:"voronoi diagram"})," ","is a partition of a plane into regions called ",(0,i.jsx)("b",{children:"voronoi cells"}),". A voronoi cell consists of every point in the plane whose distance to its linked data point is less than or equal to its distance to"," ",(0,i.jsx)("b",{children:"any other data point"}),"."," "]}),(0,i.jsxs)("p",{children:["This page is a step-by-step guide on how to build your own voronoi diagram for the web, using ",(0,i.jsx)("a",{href:"https://reactjs.org/",children:"React"})," and"," ",(0,i.jsx)("a",{href:"https://d3-graph-gallery.com",children:"D3.js"}),"."]}),(0,i.jsxs)("p",{children:["It starts by describing how the ",(0,i.jsx)("b",{children:"data"})," should be organized and explains how to run and plot a ",(0,i.jsx)("b",{children:"Delaunay triangulation"}),". Based on this, it explains how to build the voronoi diagram. Finally it shows how this can be used for real life application like for a ",(0,i.jsx)("b",{children:"scatterplot"})," ","or to build a ",(0,i.jsx)("b",{children:"voronoi treemap"}),"."]})]});function _(){return(0,i.jsxs)(s.A,{title:"How to build a Voronoi Diagram with React and D3.",seoDescription:"A step-by-step guide to build your very own voronoi diagram from scratch. Comes with explanations, code sandboxes, and ready-to-use templates.",children:[(0,i.jsx)(r.Z,{title:"Voronoi Diagram",description:B,chartType:"voronoi"}),(0,i.jsx)("h2",{id:"data",children:"The Data"}),(0,i.jsxs)("p",{children:["Everything starts with a set of ",(0,i.jsx)("b",{children:"two-dimensional points"}),". Their coordinates are available with ",(0,i.jsx)("code",{children:"x"})," representing the position on the ",(0,i.jsx)("b",{children:"horizontal"})," axis and ",(0,i.jsx)("code",{children:"y"})," being for the"," ",(0,i.jsx)("b",{children:"vertical"})," axis."]}),(0,i.jsxs)("p",{children:["As a result, the dataset is pretty simple: an ",(0,i.jsx)("code",{children:"array"})," of"," ","objects that looks like this:"]}),(0,i.jsx)("br",{}),(0,i.jsx)(l.d,{code:C}),(0,i.jsxs)("p",{children:["Note: this is the same dataset as the one used for a"," ",(0,i.jsx)(m(),{href:"/scatter-plot",children:"scatterplot"}),"."]}),(0,i.jsx)("h2",{id:"2d plane",children:"A set of two-dimensional points"}),(0,i.jsxs)("p",{children:["Let's start by plotting those data points on a two-dimensional points. This is basically a ",(0,i.jsx)(m(),{href:"/scatter-plot",children:"scatterplot"})," except that we're not drawing the axes."]}),(0,i.jsxs)("p",{children:["If you're not familiar with the basic steps used in the following sandbox, please take a look at the"," ",(0,i.jsx)(m(),{href:"/scatter-plot",children:"scatterplot"})," section of the gallery that goes in deep on what's going on here."]}),(0,i.jsx)(N.J,{isFilled:!0,size:"sm",href:"scatter-plot",children:"Scatterplot section"}),(0,i.jsx)("p",{children:(0,i.jsx)("br",{})}),(0,i.jsxs)("p",{children:["You need a good understanding about ",(0,i.jsx)("b",{children:"d3 scales"}),", how to"," ",(0,i.jsx)("b",{children:"loop through a data"})," array to create ",(0,i.jsx)("b",{children:"svg elements"})," and how to make the component ",(0,i.jsx)("b",{children:"renders"})," them."]}),(0,i.jsx)(d.$,{VizComponent:y,vizName:"VoronoiScatterOnly",maxWidth:600,height:300,caption:"A voronoi diagram starts with a set of 2d coordinate points plotted on a plane."}),(0,i.jsx)("h2",{id:"delaunay",children:"Delaunay triangulation"}),(0,i.jsxs)("p",{children:["The first required step to build a voronoi diagram is to run a"," ",(0,i.jsx)("a",{href:"https://en.wikipedia.org/wiki/Delaunay_triangulation",children:"Delaunay triangulation"}),"."]}),(0,i.jsxs)("p",{children:["You don't necessarily need to understand what a Delaunay triangulation is. But if you're interested in the topic, it will be covered in the"," ",(0,i.jsx)(m(),{href:"subscribe",children:"dataviz universe"})," newsletter soon."]}),(0,i.jsxs)("p",{children:["Fortunately, d3.js has a module called"," ",(0,i.jsx)("a",{href:"https://github.com/d3/d3-delaunay",children:"d3-delaunay"})," that does this triangulation for us. You can import this module as follow. You can also read its complete doc on"," ",(0,i.jsx)("a",{href:"https://github.com/d3/d3-delaunay",children:"github"}),"."]}),(0,i.jsx)(l.d,{code:E}),(0,i.jsxs)("p",{children:["Start by creating a ",(0,i.jsx)("code",{children:"delaunay"})," object thanks to the"," ",(0,i.jsx)("code",{children:"Delaunay.from()"})," function. This function expects an array of array of numbers, so there is a tiny bit of data wrangling to do here."]}),(0,i.jsx)(l.d,{code:Y}),(0,i.jsxs)("p",{children:["This ",(0,i.jsx)("code",{children:"delaunay"})," object contains all the information about the triangulation \uD83C\uDF89. It also has a method called ",(0,i.jsx)("code",{children:"render()"})," that provides the svg path of all the ",(0,i.jsx)("code",{children:"adjacent triangles"}),"."]}),(0,i.jsx)(l.d,{code:U}),(0,i.jsxs)("p",{children:["This path is provided as a string that we can pass to a"," ",(0,i.jsx)("code",{children:"path"})," svg element as follow:"]}),(0,i.jsx)(l.d,{code:A}),(0,i.jsxs)("p",{children:["We can now render this inside an ",(0,i.jsx)("code",{children:"svg"})," element to get an overview of this ",(0,i.jsx)("b",{children:"delaunay triangulation"}),":"]}),(0,i.jsx)(d.$,{VizComponent:b,vizName:"VoronoidelaunayOnly",maxWidth:600,height:300,caption:"Second step: run a Delaunay triangulation on the set of two-dimensional points."}),(0,i.jsx)("h2",{id:"voronoi",children:"Voronoi diagram"}),(0,i.jsxs)("p",{children:["The Delaunay triangulation above corresponds to the ",(0,i.jsx)("b",{children:"dual graph"})," of the Voronoi diagram. Basically, it means that the ",(0,i.jsx)("b",{children:"circumcenters"})," ","of the Delaunay triangles are the ",(0,i.jsx)("b",{children:"vertices"})," of the Voronoi diagram."]}),(0,i.jsxs)("p",{children:["But no worries, the ",(0,i.jsx)("code",{children:"delaunay"})," object we built in the previous section has a ",(0,i.jsx)("code",{children:"voronoi()"})," method. It computes the voronoi cell coordinates based on the delaunay information:"]}),(0,i.jsx)(l.d,{code:F}),(0,i.jsx)("p",{children:"We can plot the voronoi cells using the same kind of code as for the delaunay triangles. Resulting in our first voronoi diagram! \uD83C\uDF89"}),(0,i.jsx)("br",{}),(0,i.jsx)(d.$,{VizComponent:u,vizName:"VoronoiBasic",maxWidth:600,height:300,caption:"Last step: join the circumcenters of each triangle to get the voronoi diagram."}),(0,i.jsx)(w.r,{chartId:"voronoi"}),(0,i.jsx)(k.Z,{chartId:"voronoi"}),(0,i.jsx)("h2",{id:"closest point",children:"Closest point detection"}),(0,i.jsxs)("p",{children:["The voronoi diagram is commonly used to detect the ",(0,i.jsx)("b",{children:"closest"})," data point of the mouse position. This can be pretty useful to highlight the closest point without having to hover ",(0,i.jsx)("b",{children:"exactly"})," over it."]}),(0,i.jsx)("p",{children:"In the example below, the closest dot will be highlighted with a red circle ⭕️ using the voronoi cells."}),(0,i.jsx)("br",{}),(0,i.jsx)(d.$,{VizComponent:T,vizName:"VoronoiClosestPoint",maxWidth:600,height:300,caption:"Use the voronoi algorithm to detect the closest point of the mouse position."}),(0,i.jsx)("h2",{id:"variations",children:"Variations"}),(0,i.jsx)("p",{children:"A glimpse of what it is possible to do using the voronoi diagram for data visualization."}),(0,i.jsx)("p",{children:"Click on the overview below to get details and code."}),(0,i.jsx)("br",{}),(0,i.jsx)(V.Z,{images:["scatterplot-tooltip-with-voronoi-for-closest-point-detection.gif"]}),(0,i.jsx)(R.H,{text:"Add voronoi treemap example"}),(0,i.jsx)("div",{className:"full-bleed border-t h-0 bg-gray-100 mb-3 mt-24"}),(0,i.jsx)(a.Z,{chartFamily:"partOfAWhole"}),(0,i.jsx)("div",{className:"mt-20"})]})}let C="\nexport const data = [\n  { x: 10, y: 10 },\n  { x: 4, y: 4 },\n  { x: 35, y: 90 },\n  { x: 67, y: 34 },\n  ...\n];\n".trim(),E='\nimport { Delaunay } from "d3";\n'.trim(),Y="\nconst delaunay = useMemo(() => {\n  const formattedData = data.map((d) => [xScale(d.x), yScale(d.y)]);\n  return Delaunay.from(formattedData);\n}, []);\n".trim(),U="\nconst delaunayPath = delaunay.render();\n".trim(),A='\nconst allDelaunayShapes = (\n  <path d={delaunayPath} stroke="grey" fill="transparent" opacity={0.2} />\n);\n'.trim(),F="\nconst voronoi = useMemo(() => {\n  return delaunay.voronoi([0, 0, width, height]);\n}, [data]);\n".trim()}},function(e){e.O(0,[2343,7754,2604,7823,8190,3710,2594,693,6588,9774,2888,179],function(){return e(e.s=20225)}),_N_E=e.O()}]);